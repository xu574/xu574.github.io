{"meta":{"title":"有五个落单的","subtitle":" 各就其位！！","description":"各就其位,  自然选择号，前进四！","author":"574.xu","url":"https://www.codebai.top","root":"/"},"pages":[{"title":"","date":"2020-05-11T04:36:08.162Z","updated":"2020-03-22T18:36:17.993Z","comments":true,"path":"404.html","permalink":"https://www.codebai.top/404.html","excerpt":"","text":"404"},{"title":"categories","date":"2020-03-21T11:48:41.000Z","updated":"2020-03-22T18:02:19.535Z","comments":false,"path":"categories/index.html","permalink":"https://www.codebai.top/categories/index.html","excerpt":"","text":""},{"title":"about","date":"2020-03-22T17:58:48.000Z","updated":"2020-07-18T12:40:57.760Z","comments":true,"path":"about/index.html","permalink":"https://www.codebai.top/about/index.html","excerpt":"","text":"有五个落单的，出生于1998-02-18，就读于郑州轻工业大学，本科专业机械设计制造及其自动化。现工作与杭州格力。 小学（2003-2010）记不太清了，只记得几位发小和当时的小伙伴，整个小学阶段还是很快乐的。 初中（2010-2013）一个私立初中，全日住宿，现在回想起来当时环境挺差，不过当时的朋友到现在还是真正意义的朋友。 高中（2013-2016） 高中很不顺，自己很浮躁，印象最深的就是和青春痘的奋斗过程。 大学时间过得很快 (2016-2020)四年正常学完专业知识作为班级团支书和心理委员完成自己的工作任务 完成实习工作 寒暑假在家帮忙 带带学弟学妹 参加和创办了一些活动（家电义务维修，电子元件DIY） 在学校卖了一段时间盆栽（被学校保安驱逐了） 宿舍养了一只猫（在宿管无情严逼下送人了） 拥有过一辆山地自行车（超丐版） 在校外住了一段时间，感觉压力太大，毕竟自己没收入 考研复试准备中 疫情在家准备复试，不过自己未能进入复试，也没有在吉林大学的调剂机会（选择和努力都很重要） 准备调剂其他院校，准备毕业答辩工作 调剂到汕头大学（机械专业），放弃就读准备二战 准备二战过程中，感觉压力好大，尝试再调剂一个自己中意的院校 调剂到中国医科大学，公共基础学院 得知调剂的是材料方向，觉得又不想去了（毕竟自己还是不喜欢材料的研究方向） 调剂系统关闭，2020.06.20回学校收拾东西，正式毕业了！ 第一份工作的求职过程 在合肥去了龙图腾，九思，中谷等专利事务所，以及京东方。最终还是放弃了在合肥的工作机会 第二站来到了杭州，面试了泽天科技，拓峰科技，杭州格力。十分感谢拓峰科技，面试十分正规，最后也&gt;统一录用，并且待遇还是比较不错的，不过本人最终还是选择了杭州格力。 杭州格力工作中。。。"},{"title":"既然来了就留下来点东西吧！","date":"2020-03-26T01:28:48.000Z","updated":"2020-03-26T01:32:01.016Z","comments":true,"path":"comment/index.html","permalink":"https://www.codebai.top/comment/index.html","excerpt":"","text":""},{"title":"","date":"2020-03-24T07:52:21.768Z","updated":"2020-03-24T07:52:21.768Z","comments":true,"path":"js/text.js","permalink":"https://www.codebai.top/js/text.js","excerpt":"","text":"var a_idx = 0; jQuery(document).ready(function($) { $(\"body\").click(function(e) { var a = new Array(\"喜欢我\", \"不喜欢我\"); var $i = $(\"\").text(a[a_idx]); var x = e.pageX, y = e.pageY; $i.css({ \"z-index\": 99999, \"top\": y - 28, \"left\": x - a[a_idx].length * 8, \"position\": \"absolute\", \"color\": \"#ff7a45\" }); $(\"body\").append($i); $i.animate({ \"top\": y - 180, \"opacity\": 0 }, 1500, function() { $i.remove(); }); a_idx = (a_idx + 1) % a.length; }); });"},{"title":"","date":"2020-03-24T07:52:24.874Z","updated":"2020-03-24T07:52:24.874Z","comments":true,"path":"js/love.min.js","permalink":"https://www.codebai.top/js/love.min.js","excerpt":"","text":"!function(e,t,a){function n(){c(\".heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}\"),o(),r()}function r(){for(var e=0;e"},{"title":"","date":"2020-03-24T07:52:31.799Z","updated":"2020-03-24T07:52:31.799Z","comments":true,"path":"js/explosion.min.js","permalink":"https://www.codebai.top/js/explosion.min.js","excerpt":"","text":"\"use strict\";function updateCoords(e){pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top}function setParticuleDirection(e){var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return{x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)}}function createParticule(e,t){var a={};return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function(){ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()},a}function createCircle(e,t){var a={};return a.x=e,a.y=t,a.color=\"#F00\",a.radius=.1,a.alpha=.5,a.lineWidth=6,a.draw=function(){ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1},a}function renderParticule(e){for(var t=0;t"},{"title":"","date":"2020-07-17T13:07:44.765Z","updated":"2020-03-24T07:52:27.799Z","comments":true,"path":"js/fireworks.js","permalink":"https://www.codebai.top/js/fireworks.js","excerpt":"","text":"class Circle { constructor({ origin, speed, color, angle, context }) { this.origin = origin this.position = { ...this.origin } this.color = color this.speed = speed this.angle = angle this.context = context this.renderCount = 0 } draw() { this.context.fillStyle = this.color this.context.beginPath() this.context.arc(this.position.x, this.position.y, 2, 0, Math.PI * 2) this.context.fill() } move() { this.position.x = (Math.sin(this.angle) * this.speed) + this.position.x this.position.y = (Math.cos(this.angle) * this.speed) + this.position.y + (this.renderCount * 0.3) this.renderCount++ } } class Boom { constructor ({ origin, context, circleCount = 16, area }) { this.origin = origin this.context = context this.circleCount = circleCount this.area = area this.stop = false this.circles = [] } randomArray(range) { const length = range.length const randomIndex = Math.floor(length * Math.random()) return range[randomIndex] } randomColor() { const range = ['8', '9', 'A', 'B', 'C', 'D', 'E', 'F'] return '#' + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) } randomRange(start, end) { return (end - start) * Math.random() + start } init() { for(let i = 0; i < this.circleCount; i++) { const circle = new Circle({ context: this.context, origin: this.origin, color: this.randomColor(), angle: this.randomRange(Math.PI - 1, Math.PI + 1), speed: this.randomRange(1, 6) }) this.circles.push(circle) } } move() { this.circles.forEach((circle, index) => { if (circle.position.x > this.area.width || circle.position.y > this.area.height) { return this.circles.splice(index, 1) } circle.move() }) if (this.circles.length == 0) { this.stop = true } } draw() { this.circles.forEach(circle => circle.draw()) } } class CursorSpecialEffects { constructor() { this.computerCanvas = document.createElement('canvas') this.renderCanvas = document.createElement('canvas') this.computerContext = this.computerCanvas.getContext('2d') this.renderContext = this.renderCanvas.getContext('2d') this.globalWidth = window.innerWidth this.globalHeight = window.innerHeight this.booms = [] this.running = false } handleMouseDown(e) { const boom = new Boom({ origin: { x: e.clientX, y: e.clientY }, context: this.computerContext, area: { width: this.globalWidth, height: this.globalHeight } }) boom.init() this.booms.push(boom) this.running || this.run() } handlePageHide() { this.booms = [] this.running = false } init() { const style = this.renderCanvas.style style.position = 'fixed' style.top = style.left = 0 style.zIndex = '999999999999999999999999999999999999999999' style.pointerEvents = 'none' style.width = this.renderCanvas.width = this.computerCanvas.width = this.globalWidth style.height = this.renderCanvas.height = this.computerCanvas.height = this.globalHeight document.body.append(this.renderCanvas) window.addEventListener('mousedown', this.handleMouseDown.bind(this)) window.addEventListener('pagehide', this.handlePageHide.bind(this)) } run() { this.running = true if (this.booms.length == 0) { return this.running = false } requestAnimationFrame(this.run.bind(this)) this.computerContext.clearRect(0, 0, this.globalWidth, this.globalHeight) this.renderContext.clearRect(0, 0, this.globalWidth, this.globalHeight) this.booms.forEach((boom, index) => { if (boom.stop) { return this.booms.splice(index, 1) } boom.move() boom.draw() }) this.renderContext.drawImage(this.computerCanvas, 0, 0, this.globalWidth, this.globalHeight) } } const cursorSpecialEffects = new CursorSpecialEffects() cursorSpecialEffects.init()"},{"title":"友情链接","date":"2019-08-11T07:34:16.000Z","updated":"2020-03-25T10:14:53.838Z","comments":true,"path":"links/index.html","permalink":"https://www.codebai.top/links/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-03-22T18:01:04.000Z","updated":"2020-03-22T18:01:50.821Z","comments":false,"path":"tags/index.html","permalink":"https://www.codebai.top/tags/index.html","excerpt":"","text":""},{"title":"","date":"2020-08-10T15:32:34.814Z","updated":"2020-04-05T09:16:23.311Z","comments":true,"path":"photos/index.html","permalink":"https://www.codebai.top/photos/index.html","excerpt":"","text":".header-inner{ display: none; } .sidebar{ display: none; } .content{ margin-bottom: 50px; } .content-wrap{ width: 100%; // box-sizing: content-box; padding: initial !important; background:url('https://s2.ax1x.com/2019/09/07/nlL4pR.jpg'); } .main-inner{ width: 100%; } .main { padding-bottom: 80px; margin-top: 0px; background:url('https://s2.ax1x.com/2019/09/07/nlL4pR.jpg'); } .main-inner{ margin-top: unset; } .page-post-detail .post-meta{ display: none; } body { background-image: unset; background-attachment: unset; background-size: 100%; /*background-position: top left;*/ } .header{ background: rgba(28, 25, 25, 0.8); border-bottom: unset; } .menu .menu-item a{ font-weight: 300; color: #e6eaed; } .footer-inner { padding-left: 0px; } img:hover { //opacity:0.9; /*透明度*/ //filter:alpha(opacity=100); /* For IE8 and earlier */ } .imgbox{ margin-top: 20px; /*margin-bottom: 100px;*/ padding: 1px 7px; width: 100%; overflow: hidden; height: 630px; /*border-right: 1px solid #fdfcfc;*/ background:url('https://s2.ax1x.com/2019/09/07/nlL4pR.jpg'); } .box{ visibility: visible; overflow: auto; zoom: 1; } .box li{ float: left; width: 25%; position: relative; overflow: hidden; text-align: center; list-style: none; margin: 0; /*display: inline;*/ padding: 0; height: 780px; } .box li span{ display: block; padding: 7% 7% 7% 7%; min-height: 80px; //background: #fff; color: #FFFAFA; font-size: 16px; font-weight: 600; line-height: 26px; -webkit-box-sizing: border-box; box-sizing: border-box; } img.imgitem{ padding: unset; padding: unset; border: unset; position: relative; padding: 0px; height: auto; width: 100%; } div#posts.posts-expand { border: unset; padding: unset; margin-bottom: 10px; } .posts-expand .post-body img{ padding: 0px !important; } .box p{ margin-top: -25px; display: block; background: #121212; color: #fff; font-size: 14px; -webkit-box-sizing: border-box; box-sizing: border-box; text-align: center; } .box span strong{ background: rgba(0,0,0,0.4); padding: 20px; } .posts-expand .post-title { display: none; } .title{ margin: 100px auto 10px auto; display: inline-block; vertical-align: middle; //background: url(/images/beichen.jpg); font: 85px/250px 'ChaletComprimeMilanSixty'; //background-position: left bottom !important; background-position: center center !important; color: #fff; background-size: 100% auto !important; -webkit-background-size: cover; -moz-background-size: cover; -o-background-size: cover; width: 100%; text-align: center; border: unset; height: 560px; cursor: unset !important; -webkit-box-sizing: border-box; box-sizing: border-box; } @media (max-width: 767px){ .box li { width: 98%; } .title { height: 200px; } .box span { min-height: 80px; border-right: unset; font-size: 17px; } .box p{ border-right: unset; font-size: 12px; } .posts-expand { margin: unset; } } @media (min-width: 1600px){ .container .main-inner{ width: 100%; } } // 相册json var json = [ [ { 'title': 'no title', 'url': 'https://s2.ax1x.com/2019/09/07/nlRzZt.jpg' }, { 'title': 'no title', 'url': 'https://i.loli.net/2020/04/05/dZqiUEyT8rWzCuB.jpg' }, { 'title': 'no title', 'url': 'https://i.loli.net/2020/04/05/CyHl2WhFO7Sf6pb.jpg' }, { 'title': 'no title', 'url': 'https://i.loli.net/2020/04/05/rShn6wz7NIPMbut.jpg' }, { 'title': 'NBA', 'url': 'https://i.loli.net/2020/03/27/iWN2vuGdBVHceaJ.png' } ], [ { 'title': 'College', 'url': 'https://s2.ax1x.com/2019/09/07/nl5540.md.jpg' }, { 'title': '少儿不宜hh', 'url': 'https://i.loli.net/2020/03/27/ckbODg9ChaBtvY7.png' }, { 'title': '鼬神', 'url': 'https://i.loli.net/2020/03/27/gXIxMZrf96yT578.png' }, { 'title': '诺诺雅索大', 'url': 'https://i.loli.net/2020/03/27/IxEuA7igrWOD8Ho.png' }, { 'title': '狸猫-小零食', 'url': 'https://i.loli.net/2020/03/27/iONrKnvfo8ld2ej.png' } ], [ { 'title': 'SMIPLICITY', 'url': 'https://i.loli.net/2020/03/27/J2zy9MLAOWVx6sU.jpg' }, { 'title': '宿舍橘猫1', 'url': 'https://i.loli.net/2020/03/27/X1W4rqnKoOicfNM.png' }, { 'title': '宿舍橘猫2', 'url': 'https://i.loli.net/2020/03/27/94sFmWAUieTRgod.png' }, { 'title': '起名为塑料花', 'url': 'https://i.loli.net/2020/03/27/PyfIbNFZ7AwBvSr.png' } ] ] var content = json2Array(json); var wid = 250; if ((window.innerWidth) > 1200) { wid = (window.innerWidth*3)/18; } var box = document.getElementById('box'); var i=0; for (var i = 0; i < content.length; i++) { var conBox = document.createElement(\"div\"); conBox.id = 'conBox'+i; box.appendChild(conBox); var item = document.createElement(\"div\"); var title = content[i][0].title; var url = content[i][0].url; item.innerHTML = \"\" + title + \"\"; conBox.appendChild(item); for (var j = 1; j < content[i].length ; j++) { var _title = content[i][j].title; var _url = content[i][j].url; var item = document.createElement(\"li\"); item.innerHTML=\"\" + _title +\"\"; conBox.appendChild(item); } } //json转二维数组 function json2Array(arr) { for (var i=0; i"},{"title":"文章热度排行","date":"2019-08-14T07:23:11.000Z","updated":"2020-03-29T05:35:41.703Z","comments":true,"path":"top/index.html","permalink":"https://www.codebai.top/top/index.html","excerpt":"","text":"firebase.initializeApp({ apiKey: 'AIzaSyA3Cyv0OK9YlybjJNcKuHMKlm2asxPO-vY', //你的apiKey projectId: 'count-d7b7d' //你的projectId }) var title= ''; var count = 0; var url = ''; const db = firebase.firestore(); var collection = 'article'; //主题配置文件配置的collection //'; db.collection(collection).orderBy('count', 'desc').limit(10).get().then((querySnapshot) => { querySnapshot.forEach((doc) => { // console.log(doc.id, \" => \", doc.data()); title = doc.id; count = doc.data().count; url = doc.data().url; var content=\"\"+\"\"+\"【文章热度: \"+count+\" ℃】\"+\"\" + '&emsp;&emsp;' + \""}],"posts":[{"title":"控制器实习","slug":"控制器实习","date":"2020-08-10T14:32:12.000Z","updated":"2020-08-10T14:39:09.513Z","comments":true,"path":"posts/ecf2ee8a.html","link":"","permalink":"https://www.codebai.top/posts/ecf2ee8a.html","excerpt":"","text":"预装班组2020.08.10 为显示板安装海绵，工作很枯燥，就将海绵黏在显示板上，完全是重复性工作。个人想法：","categories":[{"name":"格力实习","slug":"格力实习","permalink":"https://www.codebai.top/categories/%E6%A0%BC%E5%8A%9B%E5%AE%9E%E4%B9%A0/"}],"tags":[]},{"title":"Wincc报表系统","slug":"Wincc报表系统","date":"2020-04-15T15:15:42.000Z","updated":"2020-04-15T19:19:38.824Z","comments":true,"path":"posts/183b4f5a.html","link":"","permalink":"https://www.codebai.top/posts/183b4f5a.html","excerpt":"wincc报表系统主要是用于打印使用，具体内容在布局中1.新建页面布局","text":"wincc报表系统主要是用于打印使用，具体内容在布局中1.新建页面布局 1.静态层包括布局的页眉和页脚，用于输出公司名称、公司标志、项目名称、布局名称、页码、时间等。2.动态层包括输出组态和运行系统数据的动态对象。3.只有静态对象和系统对象可插入到静态层。静态对象和动态对象均可插入动态层。 2.新建打印作业3.打印按钮的c脚本 12#pragma option(mbcs)RPTJobPrint(\"打印作业001\");","categories":[{"name":"毕业设计","slug":"毕业设计","permalink":"https://www.codebai.top/categories/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"wincc","slug":"wincc","permalink":"https://www.codebai.top/tags/wincc/"}]},{"title":"Wincc报警记录","slug":"Wincc报警记录","date":"2020-04-15T14:12:26.000Z","updated":"2020-04-15T19:19:38.828Z","comments":true,"path":"posts/1487dd59.html","link":"","permalink":"https://www.codebai.top/posts/1487dd59.html","excerpt":"WinCC V7.5 模拟量报警组态由模拟量触发的超过限制值、值相同以及值不同的报警称为模拟量报警，例如温度低于最小值，转速超过一定值等。具体步骤如下","text":"WinCC V7.5 模拟量报警组态由模拟量触发的超过限制值、值相同以及值不同的报警称为模拟量报警，例如温度低于最小值，转速超过一定值等。具体步骤如下 1.首先在项目管理器左边菜单中双击“报警记录”。2.在弹出的报警记录编辑器中选择“限值监视”。3.在右边消息列表中选择“变量”。4.选择需要监视的模拟量。5.点击图中变量左边的箭头。6.在下一行的下拉列表中选择比较方式。7.这里我们选择上限，消息号填写2，比较值填写80，那么当变量值大于等于80，触发报警。注意：这里的消息号是手动填写的，必须唯一。填写后，系统会自动创建编号为2的报警。8.选择消息列表，我们能看到系统创建的报警和报警消息文本。9.在图形编辑器中打开画面，从右边的控件列表中， 把WinCC AlarmControl控件拖拽到画面，用于显示报警。10.在弹出的控件属性对话框中（双击控件也可以弹出熟悉对话框），选择消息列表，把需要显示的块从左边列表添加到右边列表，然后保存画面。11.最后在项目编辑器中选择“计算机”，然后双击计算机名，在弹出的属性对话框中选择“启动”列表，在列表中勾选“报警记录运行系统”， 然后激活项目。项目运行后，可以看到，当触发变量为86，报警控件将显示报警触发的日期，时间，消息文本等。消息文本中还将显示限制值为80，比较方式为超出上限，超出值为85。 添加声音报警1.C脚本播放wav格式文件 12345678#include\"apdefap.h\"void OnClick()&#123; #pragma code(\"Winmm.dll\") VOID WINAPI PlaySoundA(char*pszSound,char*hmode,DWORD dwflag); #pragma code() PlaySoundA(\"C:\\\\Windows\\\\Media\\\\tada.wav\",NULL,1);&#125; C脚本触发pc蜂鸣器 1234#pragma code(\"kernel32.dll\")BOOL Beep(int dwFreq,int dwDuration);#pragma code()Beep(1000,100); 1.新建内部变量（注意数据类型）2.在报警记录中天添加两条消息alarm113.在报警器》消息分配4.报警器》信号分配，添加两个声音文件，分别用户用于“错误”消息类别和“系统，无确认”消息类别 参考文献:http://www.ad.siemens.com.cn/service/elearning/course/1791.html","categories":[{"name":"毕业设计","slug":"毕业设计","permalink":"https://www.codebai.top/categories/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"wincc","slug":"wincc","permalink":"https://www.codebai.top/tags/wincc/"}]},{"title":"wincc变量记录","slug":"wincc变量记录","date":"2020-04-15T07:30:20.000Z","updated":"2020-04-15T19:19:38.833Z","comments":true,"path":"posts/84088e0b.html","link":"","permalink":"https://www.codebai.top/posts/84088e0b.html","excerpt":"变量记录：归档系统负责运行状态下的过程值归档归档系统首先处理缓存于运行系统数据库中的过程值，然后再将过程值写到归档数据库中。","text":"变量记录：归档系统负责运行状态下的过程值归档归档系统首先处理缓存于运行系统数据库中的过程值，然后再将过程值写到归档数据库中。 过程值归档涉及下列 WinCC 子系统： 自动化系统（AS）：存储通过通讯驱动程序传送到 WinCC 的过程值。 数据管理器（DM）：处理过程值，然后通过过程变量将其返回到归档系统。 归档系统：处理采集到的过程值（例如，通过产生平均值）。处理方法取决于组态归档的方式。 运行系统数据库（DB）：保存要归档的过程值。 归档的术语定义 采集周期：确定何时在自动化系统中读出过程变量的数值。例如，可以为过程值的连续周期性归档组态一个采集周期。 归档周期：确定何时在归档数据库中保存所处理的过程值。例如，可以为过程值的连续周期性归档组态一个归档周期。 组态处理如果归档周期&gt;采集周期，则在归档周期内采集的过程值可组态下列处理:当前值:保存所采集的最后一个过程值。总计:保存所有采集到的过程值的总和。最大值:保存所有采集的过程值的最大值。最小值:保存所有采集的过程值的最小值。平均值:保存所有采集到的过程值的平均值。动作:最近采集的过程值由全局脚本中创建的函数进行计算。如果归档周期=采集周期，这并不表示同时启动采集和归档。在采集和归档之间可能相差高达一个采集周期 WinCC V7.5 变量变化时归档（本人使用）以下组态将创建只有过程变量的值发生变化时才进行归档。 在WinCC项目管理器左边列表双击“变量记录”，打开变量记录编辑器。 在变量记录编辑器中，选择归档下的过程值归档，点击鼠标右键，在菜单中选择“新增过程值归档”。 选择新建的过程值归档。 在右边列表中选择添加过程值变量，在弹出的变量选择界面中选择需要归档的过程变量。 在过程变量属性列表中，选择采集类型为“非周期-有变化时”，采集周期为500ms，归档/显示周期为“1 day”。归档显示周期我们尽量设置大一些，虽然这个周期不影响数据的归档，但是会影响数据的显示。例如在WinCC在线表格控件中，即使变量没有变化，每到显示周期，WinCC在线表格控件上也会显示一条记录。 打开组图画面，在控件列表中选中在线表格控件WinCC OnlineTableControl拖拽到画面。 在弹出的控件属性对话框中(双击控件也可以打开属性对话框)，选择“数值列”。 数据源选择：归档变量。 点击变量名称选择按钮。 在弹出的选择对话框中选择已归档的变量名称。最后保存画面。 在WinCC项目管理器中选择“计算机”。 双击右边的计算机名。 在弹出的属性对话框中选择启动列表，勾选“变量记录运行系统”。项目激活以后，在画面上能看到变量每变化一次归档一次。 参考文献 【wincc使用说明】","categories":[{"name":"毕业设计","slug":"毕业设计","permalink":"https://www.codebai.top/categories/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"wincc","slug":"wincc","permalink":"https://www.codebai.top/tags/wincc/"}]},{"title":"SIMATIC S7-1500 PLC硬件组态","slug":"SIMATIC-S7-1500-PLC硬件组态","date":"2020-04-15T07:07:45.000Z","updated":"2020-04-15T19:19:38.831Z","comments":true,"path":"posts/ab29944c.html","link":"","permalink":"https://www.codebai.top/posts/ab29944c.html","excerpt":"硬件组态是SIMATIC S7-1500系列PLC编程的第一步。通常情况下，编程调试人员会根据电气图纸及PLC实物，从硬件目录中依次添加CPU及机架上的各个模块。如果机架上的模块比较多，可能会花费比较长的时间。今天这篇文章，我想给大家介绍一个小技巧，可以实现对CPU及机架上的信号模块的快速组态。","text":"硬件组态是SIMATIC S7-1500系列PLC编程的第一步。通常情况下，编程调试人员会根据电气图纸及PLC实物，从硬件目录中依次添加CPU及机架上的各个模块。如果机架上的模块比较多，可能会花费比较长的时间。今天这篇文章，我想给大家介绍一个小技巧，可以实现对CPU及机架上的信号模块的快速组态。 首先，我们打开博途（TIA Portal）开发环境，新建一个项目。在新建的项目中，双击左侧导航栏“添加新设备（Add new device）”，在弹出的对话框中点击【控制器（Controler）】-【SIMATIC S7-1500】-【CPU】。我们先不选择具体的CPU的型号，而是选择【不指定CPU（unspecified CPU 1500）】，如下图：点击【OK】确认，CPU就会被添加到项目的硬件组态中。如下图：这时，在项目硬件组态的下方有一个提示：当前未指定CPU型号，可以在硬件目录中选择具体的CPU或者检测（detect）目前连接的设备。后者就是我们要介绍的技巧。 首先，我们用网线把当前运行博途组态的电脑和设备的CPU连接起来，然后点击【检测（detect）】。博途（TIA Portal）会自动跳转到网络搜索界面。如下图：配置当前使用的PG/PC接口的类型和使用的网口，点击【开始搜索（Start search）】。博途会搜索到当前网络所连接的CPU，如下图：选中想要组态的CPU，点击【检测（Detect）】。你会发现该CPU及机架上的所有模块会自动添加到当前项目的硬件组态中，如下图：","categories":[{"name":"毕业设计","slug":"毕业设计","permalink":"https://www.codebai.top/categories/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"wincc","slug":"wincc","permalink":"https://www.codebai.top/tags/wincc/"}]},{"title":"wincc与S7-1500/1200连接","slug":"wincc通讯","date":"2020-04-15T04:35:08.000Z","updated":"2020-04-24T16:49:47.439Z","comments":true,"path":"posts/f183518d.html","link":"","permalink":"https://www.codebai.top/posts/f183518d.html","excerpt":"自 WinCC V7.2版本起，软件新增加了“ SIMATIC S7-1200、S7-1500 Channel”通道，用于WinCC与S7-1200/S7-1500PLC之间的通信此动只支持以太网通讯，使用TCP/IP协议。","text":"自 WinCC V7.2版本起，软件新增加了“ SIMATIC S7-1200、S7-1500 Channel”通道，用于WinCC与S7-1200/S7-1500PLC之间的通信此动只支持以太网通讯，使用TCP/IP协议。 与s7-1200和s7-1500通信新功能 1.变量的循环读取2.绝对寻址3.符号寻址4.时间序列报告（程序报警）{装载AS消息（s7-1500）}5.时间同步和密码保护 在wincc中使用s7-1200/s7-1500变量方法一：导出/导入功能(本次用的方法二，方法一暂时不总结)1.1、从TIA Portal导出变量（仅限绝对导出）1.2、通过Configuration Studio导入Wincc 方法二：装载AS变量（变量和报警）1、设置PLC通讯参数在TIA Portal中打开S7-1500项目，关于PLC硬件组态步骤查看此文，在树形菜单中打开“设备组态”，打开网络视图点击通讯端口，在“属性”界面中设置通讯参数，在“子网”列表中可把接口连接到某一子网,设置“IP地址”和“子网掩码”参数。简单通讯情况下，可以不用启用IP路由器，如图所示（ip地址为plc的ip） 2、在S7-PLCSIM中新建s7-1500的仿真，之后将组态下载到CPU，会发现模拟仿真在运行。PLC组态完成3、在PLC和电脑之间接入以太网通讯电线，测试电脑与PLC之间物理连接是否正常。选择操作系统左下角“开始”菜单，在最下一行运行栏中输入“CMD”命令，然后敲回车进入DOS命令界面，在界面中输入ping命令，格式： ping(PLC IP地址)回车，如果物理连接正常如图所示：如果显示超时或者硬件故障，请检查IP地址设置、网卡驱动以及物理网线。 4、为PLC和WinCC建立连接本文使用的PLC型号为西门子S7-1500，并且在实验室中成功连接测试完成与PLC的实体连接，要实现WinCC与PLC设备的连接，需要进行以下三个步骤：4.1 配置IPv4局域网查看PLC的IP地址，格式为xxx.xxx.xxx.xxx，本文连接的PLC的IP为：192.168.23.199，其中前三段数字192.168.23.xxx为PLC所在的局域网网段，xxx为当下局域网下的具体地址。需要将WinCC客户机配置到同一局域网中，具体步骤是：右键PC桌面右下角网络图标，打开”网络和共享中心”&gt;”更改适配器设置”&gt;右键”本地连接”打开属性。 图3-6 本地连接属性 双击IPv4进行配置，如下图： ![](/wincc通讯/20200415022536948.png) 图3-7 IPv4协议属性 IP地址填写192.168.23.yyy网段下的地址且不同与PLC的IP地址即可，IP网段中的yyy的取值为2到254，子网掩码设定图3-7示： 4.2配置PG/PC接口 在控制面板中的类别图标即设置大图标里面有一个选项为设置PG/PC接口，打开后如图3-8所示界面。 下拉\"应用程序访问点\"，选择\"添加/删除\"按钮，图3-9示。 填入访问点的名称，名称不固定格式，满足一般的命名规则即可。本文中填写为S7_1500v (此处的访问点名称在后续配置中使用)，描述符随意填写，用于用户识别不同的访问点，如图3-10所示。 图3-8 设置PG/PC接口 图3-9 应用程序访问点 图 3-10 添加访问点 填写完成后，点击\"添加\"按钮。接下来在\"为使用的接口分配参数\"选项中，选择带自己的以太网网卡名称并且尾部带有选项的选项卡，完成后点击确认完成接口配置，图3-11示。 图3-11 接口选择 4.3WinCC中的连接配置 WinCC的主界面下，打开\"变量管理\"选项，展开新建好的 SIMATIC S7-1200，S7-1500 Channel 选项，右键OMS+，选择\"新建连接\"，输入连接的名称，然后右键新建的连接，选择\"连接配置\"，如图3-12示： 图3-12 连接配置 输入PLC模块的IP地址，PLC的IP地址可在PLC显示器上查看。访问点选择在PG/PC接口中新建的访问点，产品系列选择要连接的PLC型号系列，点击确认完成配置，激活项目即可自动配置变量。 注意 > 1通讯诊断和注意事项 项目激活后，在变量管理界面可以直接观察到通讯是否建立，绿勾表示通讯建立， 图2-10通讯诊断工具注意，读取DB块数，DB块不能续用号，只能使用对寻址，所建的DB块属性中需要取消“优化的块访问”，如图所示。 参考文献：wincc与s7-1200/1500链接","categories":[{"name":"毕业设计","slug":"毕业设计","permalink":"https://www.codebai.top/categories/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"wincc","slug":"wincc","permalink":"https://www.codebai.top/tags/wincc/"}]},{"title":"Wincc项目管理器","slug":"Wincc项目管理器","date":"2020-04-14T09:04:20.000Z","updated":"2020-07-15T11:59:36.298Z","comments":true,"path":"posts/7d11421d.html","link":"","permalink":"https://www.codebai.top/posts/7d11421d.html","excerpt":"wincc项目管理器是在创建wincc项目时的选项，分为单用户项目，多用户项目和客户机项目 单用户项目单用户项目是计算机及作为服务器又作为客户机 多用户项目多用户结构多用户系统组态步骤","text":"wincc项目管理器是在创建wincc项目时的选项，分为单用户项目，多用户项目和客户机项目 单用户项目单用户项目是计算机及作为服务器又作为客户机 多用户项目多用户结构多用户系统组态步骤 服务器端:1.检查服务器与客户机计算机的网络连接: ip地址在同一网段好处理2.分配 Windows用户权限:三个组3.创建多用户项目并组态:4.在计算机列表中添加客户机并设置其属性:添加客户机的计算机名（只能是wincc客户机类型）5.组态客户机的WinC登陆用户和权限：添加登录用户并授予不同的权限（远程激活和远程组态权限要注意）6.生成服务器数据包:服务器数据&gt;创建（注意检查隐含更新中的自动导入选项）7.项目保持打开激活。 客户机端:1.分配windows用户权限:2.网上邻居或Simatic Shell中浏览服务器项目:simatic就在我的电脑目录下，已经自动装载好了，可以进行登录激活） 分布式系统组态步骤: 服务器端（步骤同多用户系统）:1.组态服务器项目；2.创建服务器数据包。不需要添加客户机名，因为客户机不需要对服务器进行远程组态或者远程激活 客户机端:1.创建客户机项目：进行界面或则脚本的组态2.导入服务器数据包：&gt;服务器数据&gt;装载（.pck）,导入多个服务器上的数据（画面及变量，消息数据，用户归档数据，变量归档）3.组态客户机项目。 并非所有的数据都包含在服务器数据包中，如菜单与工具栏，全局脚本，报表，用户管理，交叉索引等，如果客户需要执行以上内容，需要另行组态。 多用户 分布式 应用领域 应用于小型系统或较小型系 统。在不同的操作控制台上显示与同一过程相关的不同信息。从多个位置来操作过程，例如，沿生产线的不同位置。通过用户授权来定义某些操作控制台上的操作员可利用的功能。 应用于较大型或大型系统，系统扩充容易。同一任务要由多个操作员站和监视站（客户机）完成的大型系统上。要将不同操作员和监视任务分布到多个操作员站时，如用于显示一个系统的全部消息的中央客户机。 性能 在一台服务器上可运行多达32台客户机，每台客户机只能连接1台服务器 服务器最多可以连接32台客台户机，每台客户机最多可以连接12台服务器或12对冗余的服务器。 特点 客户端没有项目，系统组态简单，易于对服务器项目远程维护 客户端没有项目，负载平衡，使用灵活，扩展能力强 冗余服务器TIA下的系统组态Wincc软冗余","categories":[{"name":"毕业设计","slug":"毕业设计","permalink":"https://www.codebai.top/categories/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"wincc","slug":"wincc","permalink":"https://www.codebai.top/tags/wincc/"}]},{"title":"wincc自定义登录与退出界面","slug":"wincc自定义登录与退出界面","date":"2020-04-10T11:15:14.000Z","updated":"2020-04-10T13:25:02.645Z","comments":true,"path":"posts/47a0fae9.html","link":"","permalink":"https://www.codebai.top/posts/47a0fae9.html","excerpt":"WinCC用户管理器的主要功能可以给不同的用户设置不同的密码和访问权限，以便对用户的登录和访问进行监控，从而达到拒绝没有授权的访问，保证系统安全。","text":"WinCC用户管理器的主要功能可以给不同的用户设置不同的密码和访问权限，以便对用户的登录和访问进行监控，从而达到拒绝没有授权的访问，保证系统安全。 在用户管理器中添加用户名和密码并进行授权. 在图形编译器中新建启动登录界面（启动登陆.Pdl）和其他自己所需要的图形界面. 进入启动登陆界面，插入2个输入/输出域，更改名为1,2。分别是用于“用户名”输入；“密码”输入；插入2个按钮登录；退出。 用户名的输入输出域的输出值为内部变量：@CurrentUserName找到相应界面窗口添加变量 在用户名的输入输出域的事件属性-&gt;其他-&gt;对象更改 加入C脚本函数12345#include \"apdefap.h\"void OnObjectChanged(char* lpszPictureName, char* lpszObjectName, char* lpszPropertyName, char* value)&#123;SetOutputValueChar(lpszPictureName,lpszObjectName,GetInputValueChar(lpszPictureName,lpszObjectName));&#125; 按照上面做的 在密码输入输出域里加入同样的C脚本在登录按钮的事件-&gt;按钮-&gt;鼠标按下 加入C脚本注意按照自己的需要更改openpicture()的画面 1234567891011#include \"apdefap.h\"void OnLButtonDown(char* lpszPictureName, char* lpszObjectName, char* lpszPropertyName)&#123;#pragma code (\"UseAdmin.DLL\")#include \"pwrt_api.h\"#pragma code ()if (PWRTSilentLogin(GetInputValueChar(lpszPictureName,\"1\"),GetInputValueChar(lpszPictureName,\"2\")) == FALSE)MessageBox (NULL, \"错误,请重新输入!\" , \"提示\", MB_ICONEXCLAMATION| MB_SYSTEMMODAL );// &#125;elseOpenPicture(\"你要进入的画面\");&#125; 退出按钮中加入退出wincc脚本可以了12345678#include \"apdefap.h\"void OnLButtonDown(char* lpszPictureName, char* lpszObjectName, char* lpszPropertyName, UINT nFlags, int x, int y)&#123;long Ret = IDNO; Ret = MessageBox(NULL, \"您确实要退出 WinCC 运行系统么？\", \"请确认\", MB_YESNO | MB_ICONQUESTION | MB_DEFBUTTON2 | MB_SYSTEMMODAL); if (Ret == IDYES) ExitWinCC (); //退出wincc&#125; 完成","categories":[{"name":"毕业设计","slug":"毕业设计","permalink":"https://www.codebai.top/categories/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"wincc","slug":"wincc","permalink":"https://www.codebai.top/tags/wincc/"}]},{"title":"wincc用户权限","slug":"wincc用户权限","date":"2020-04-10T11:11:54.000Z","updated":"2020-04-10T13:24:54.363Z","comments":true,"path":"posts/a68fff4f.html","link":"","permalink":"https://www.codebai.top/posts/a68fff4f.html","excerpt":"默认授权概述1：用户管理用户可以访问用户管理并进行更改。 2： 数值输入用户可以手动输入值，例如在 I/O 字段中。","text":"默认授权概述1：用户管理用户可以访问用户管理并进行更改。 2： 数值输入用户可以手动输入值，例如在 I/O 字段中。 3： 过程控制用户可以操作过程。 4： 画面编辑用户可以更改画面和画面元素。 5： 画面切换用户可以触发画面更改，并打开其它组态的画面。 6： 窗口选择用户可以在 Windows 中切换应用程序窗口。 7： 硬拷贝用户可以建立当前过程画面的硬拷贝。 8： 确认消息用户可以确认消息。 9： 锁定消息用户可以锁定消息。 10： 解锁消息用户可以解锁消息。 11： 消息编辑用户可以在“报警记录”编辑器（例如使用 ODK）中编辑消息。 12： 启动归档用户可以启动归档过程。 13： 停止归档用户可以结束归档。 14： 归档值编辑用户可以组态归档变量的计算。 15： 归档编辑用户可以控制并更改归档。 16： 动作编辑用户可以运行和编辑脚本（例如使用 ODK）。 17： 项目管理器用户可以不受限制访问 WinCC 项目管理器。 18： 远程激活用户可通过另一台计算机启动和终止运行系统。 19： 远程组态用户可通过另一台计算机组态和编辑项目。 20： Web 访问 - 仅监视用户可通过另一台计算机打开项目，但是无法更改或控制该项目。","categories":[{"name":"毕业设计","slug":"毕业设计","permalink":"https://www.codebai.top/categories/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/"}],"tags":[{"name":"wincc","slug":"wincc","permalink":"https://www.codebai.top/tags/wincc/"}]},{"title":"黑苹果","slug":"黑苹果","date":"2020-03-31T13:33:49.000Z","updated":"2020-05-11T11:17:56.677Z","comments":true,"path":"posts/55f059f2.html","link":"","permalink":"https://www.codebai.top/posts/55f059f2.html","excerpt":"今天逛了一下苹果官网，看了一下前一段时间出的MAC Pro顶配RMB:411,768（四十万买个电脑hhh）","text":"今天逛了一下苹果官网，看了一下前一段时间出的MAC Pro顶配RMB:411,768（四十万买个电脑hhh） 低配RMB:54,999(除了存储1T，其他都是最低配) 试试自己装一台相同性能配置的黑苹果要多少以下配件都是参考别人的成功案例查找的可行配置 一套顶六套，个人感觉这套配置可以完成99%白苹果功能并且跑分会超过白苹果（不（mei）想（qian）实验） 八千多在官网上买个显示器都买不到，最多可以买个显示器支架hhh 个人观点，仅供参考，装机小白，欢迎评论。 参考文章链接 github大神 苹果官网","categories":[{"name":"电脑装机","slug":"电脑装机","permalink":"https://www.codebai.top/categories/%E7%94%B5%E8%84%91%E8%A3%85%E6%9C%BA/"}],"tags":[{"name":"黑苹果","slug":"黑苹果","permalink":"https://www.codebai.top/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"}]},{"title":"Markdown--表格table处理","slug":"Markdown-表格table处理","date":"2020-03-26T16:38:12.000Z","updated":"2020-03-28T15:03:50.129Z","comments":true,"path":"posts/6b64eeb8.html","link":"","permalink":"https://www.codebai.top/posts/6b64eeb8.html","excerpt":"利用HTML来实现表格功能插入表格代码如下： 12345678910&lt;table class=\"table table-bordered table-striped table-condensed\"&gt; &lt;tr&gt; &lt;td&gt;苹果&lt;/td&gt; &lt;td&gt;apple&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;香蕉&lt;/td&gt; &lt;td&gt;banana&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt;","text":"利用HTML来实现表格功能插入表格代码如下： 12345678910&lt;table class=\"table table-bordered table-striped table-condensed\"&gt; &lt;tr&gt; &lt;td&gt;苹果&lt;/td&gt; &lt;td&gt;apple&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;香蕉&lt;/td&gt; &lt;td&gt;banana&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; 以上代码实际上是属于HTML CSS代码，不过好在markdown支持部分HTML语法如果只是table标签 表格功能在markdown中将不起作用。如果table中加了个class属性，就可以正常使用表格功能了（可能是自动将md文件转HTML时候突然认出了“哇！这个加了class属性的table，感觉很是熟悉”hhh） 其中 table-bordered：带圆角边框和竖线table-striped：奇偶行颜色不同table-condensed：压缩行距 除了以上另外还有其他可供选择：1、如果需要表头跟内容不一样，可以将&lt;td&gt;表头内容&lt;/td&gt; 更换成 &lt;th&gt;表头内容&lt;/th&gt;。2、如果表格内文需要换行，可以在要换行的内容后加入&lt;br&gt;，后面的内容就会跑到下一行。3、如果内文中有代码，需要特别显示，可使用：&lt;code&gt;代码&lt;/code&gt;。4、如果表格中有需要设为斜体的内容，可使用：要设为斜体的内容。5、如果有跨行或者跨列的单元格，可用&lt;th colspan=&quot;跨列数&quot;&gt;内容&lt;/th&gt;。6、如果要调整某一列的宽度，可使用：&lt;th width=&quot;宽度值或百分比&quot;&gt;表头内容&lt;/th&gt;。 最后效果如下： 苹果 apple 香蕉 banana 有关使用表格功能可能会出现的问题可以参考这一篇文章siderbar侧栏进入post-body栏解决方案","categories":[],"tags":[]},{"title":"MarkDown添加图片的几种方式","slug":"MarkDown添加图片的三种方式","date":"2020-03-23T02:37:04.000Z","updated":"2020-03-30T09:53:09.759Z","comments":true,"path":"posts/bd8ce08f.html","link":"","permalink":"https://www.codebai.top/posts/bd8ce08f.html","excerpt":"在MarkDown文档中插图最基础的格式就是： 1![Alt text](图片链接 \"optional title\") 或则 1&lt;img src=\"图片链接\" width=\"\" height=\"\" &gt;","text":"在MarkDown文档中插图最基础的格式就是： 1![Alt text](图片链接 \"optional title\") 或则 1&lt;img src=\"图片链接\" width=\"\" height=\"\" &gt; Alt text：图片的Alt标签，用来描述图片的关键词，可以不写。最初的本意是当图片因为某种原因不能被显示时而出现的替代文字，后来又被用于SEO，可以方便搜索引擎根据Alt text里面的关键词搜索到图片。 图片链接：可以是图片的本地地址或者是网址。 “optional title”：鼠标悬置于图片上会出现的标题文字，可以不写。 插入网络图片：最常用的最方便的方法只需要在基础语法的括号中填入图片的网络链接即可，现在已经有很多免费/收费图床和方便传图的小工具可选。例如： 1![good doctor](https://s1.ax1x.com/2020/03/23/8ojlQO.jpg \"良医\") 1、good doctor是当图片无法显示的时候出现在界面上，良医是鼠标放在图片上显示的内容，具体可以在效果图上自己演示 2、将图片存在网络服务器上，有点依赖网络，其实个人感觉印象不是太大（可能本人用的比较少） 3、后面会分享一下自己使用过的图床。 插入本地图片只需要在基础语法的括号中填入图片的位置路径即可，支持绝对路径和相对路径。例如： 1![avatar](/home/picture/1.png) 不灵活不好分享，本地图片的路径更改或丢失都会造成markdown文件调不出图。","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.codebai.top/tags/hexo/"}]},{"title":"Hexo博客解决文章置顶问题","slug":"Hexo博客解决文章置顶问题","date":"2020-03-23T01:32:59.000Z","updated":"2020-08-10T14:29:59.948Z","comments":true,"path":"posts/95ddd57d.html","link":"","permalink":"https://www.codebai.top/posts/95ddd57d.html","excerpt":"示例图：","text":"示例图： 博文置顶 一种方法是手动对相关文件进行修改，具体可参考手动设置博文置顶 另一种方法就是，目前已经有修改后支持置顶的仓库，可以直接用以下命令安装。 12$ npm uninstall hexo-generator-index --save$ npm install hexo-generator-index-pin-top --save 然后在需要置顶的文章的Front-matter中加上top: true即可。比如下面这篇文章： 123456---markdowntitle: Markdown进阶（更改字体、颜色、大小，设置文字背景色，调整图片大小设置居中）date: 2020-03-23 08:19:22tags: hexo top: --- 到目前为止，置顶功能已经可以实现了。所有相关博文到这边就结束了。样式如下： 不过置顶的文章显示在最上面之后，如果没有明确的置顶标志，是不是感觉有点怪怪的呢？ 设置置顶标志打开：/blog/themes/next/layout/_macro 目录下的post.swig文件，定位到&lt;div class=&quot;post-meta&quot;&gt;标签下，插入如下代码： 12345&#123;% if post.top %&#125; &lt;i class=\"fa fa-thumb-tack\"&gt;&lt;/i&gt; &lt;font color=7D26CD&gt;置顶&lt;/font&gt; &lt;span class=\"post-meta-divider\"&gt;|&lt;/span&gt;&#123;% endif %&#125; 效果展示： 参考资料 解决Hexo博客文章置顶问题 解决Hexo置顶问题 Hexo主题的数据封装，样式渲染和扩展实例","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.codebai.top/tags/hexo/"}]},{"title":"Markdown（更改字体、颜色、大小，设置文字背景色，调整图片大小设置居中）","slug":"Markdown进阶（更改字体、颜色、大小，设置文字背景色，调整图片大小设置居中）","date":"2020-03-23T00:19:22.000Z","updated":"2020-03-30T17:27:23.188Z","comments":true,"path":"posts/5080762b.html","link":"","permalink":"https://www.codebai.top/posts/5080762b.html","excerpt":"基础知识：Markdown 通过简单标记语法，使普通文本内容具有一定格式。但它本身不支持修改字体、字号与颜色等功能的。不过可以通过简单地HTML标签来实现Size：规定文本的尺寸大小，取值从 1 到 7 ，浏览器默认值是 3.","text":"基础知识：Markdown 通过简单标记语法，使普通文本内容具有一定格式。但它本身不支持修改字体、字号与颜色等功能的。不过可以通过简单地HTML标签来实现Size：规定文本的尺寸大小，取值从 1 到 7 ，浏览器默认值是 3. 一、更改字体、大小、颜色Markdown语法12345678&lt;font face=\"黑体\"&gt;我是黑体字&lt;/font&gt;&lt;font face=\"微软雅黑\"&gt;我是微软雅黑&lt;/font&gt;&lt;font face=\"STCAIYUN\"&gt;我是华文彩云&lt;/font&gt;&lt;font color=red&gt;我是红色&lt;/font&gt;&lt;font color=#008000&gt;我是绿色&lt;/font&gt;&lt;font color=Blue&gt;我是蓝色&lt;/font&gt;&lt;font size=5&gt;我是尺寸&lt;/font&gt;&lt;font face=\"黑体\" color=green size=5&gt;我是黑体，绿色，尺寸为5&lt;/font&gt; 效果如下我是黑体字我是微软雅黑我是华文彩云我是红色我是绿色我是蓝色我是尺寸我是黑体，绿色，尺寸为5 二、为文字添加背景色 由于 style 标签和标签的 style 属性不被支持，所以这里只能是借助 table, tr, td 等表格标签的 bgcolor 属性来实现背景色。故这里对于文字背景色的设置，只是将那一整行看作一个表格，更改了那个格子的背景色（bgcolor） Markdown语法1&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=#bfa&gt;背景色#bfa&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt; 效果如下背景色black 三、设置图片大小原图默认大小 1、设置图片百分比Markdown语法1&lt;img src=\"https://s1.ax1x.com/2020/03/23/8ojlQO.jpg\" width=\"50%\" height=\"50%\"&gt; 效果如下 2、设置图片大小Markdown语法1&lt;img src=\"https://s1.ax1x.com/2020/03/23/8ojlQO.jpg\" width=\"201\" height=\"130\" &gt; 效果如下 3、设置图片居中方法一：最常用的使用方法,使用center标签 可以设置居中，但是不易更改图片大小实际上center标签会使中间的说有内容都会居中 Markdown语法123456&lt;center&gt;![good doctor](https://s1.ax1x.com/2020/03/23/8ojlQO.jpg \"良医\")# good doctor是当图片无法显示的时候出现在界面上，良医是鼠标放在图片上显示的内容，具体可以在效果图上自己演示&lt;/center&gt; 效果如下 方法二：使用HTML中的标签 1.这里需要用的HTML中的块元素标签div, 使用内嵌样式align=right(left,center,right) 2.使用这种方法比较容易更改图片的位置和大小 Markdown语法1&lt;div align=center&gt;&lt;img src=\"https://s1.ax1x.com/2020/03/23/8ojlQO.jpg\" width=\"50%\" height=\"50%\"&gt;&lt;/div&gt; 效果如下 四、有关图片和文字的内容会继续补充 To be continued","categories":[{"name":"MarkDown","slug":"MarkDown","permalink":"https://www.codebai.top/categories/MarkDown/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.codebai.top/tags/hexo/"}]},{"title":"为博客添加站内搜索功能","slug":"为博客添加站内搜索功能","date":"2020-03-22T23:32:41.000Z","updated":"2020-03-22T23:58:45.925Z","comments":true,"path":"posts/60daf15.html","link":"","permalink":"https://www.codebai.top/posts/60daf15.html","excerpt":"当我的博客文章和练习题发表得比较多的时候，要查询哪些习题是我曾经整理过的，就变得比较复杂和麻烦了，我们不可能一个一个文件的挨着去找。为了方便读者查询相应的题目以及为了我能快速定位我整理过哪些习题，故添加了站内搜索功能。","text":"当我的博客文章和练习题发表得比较多的时候，要查询哪些习题是我曾经整理过的，就变得比较复杂和麻烦了，我们不可能一个一个文件的挨着去找。为了方便读者查询相应的题目以及为了我能快速定位我整理过哪些习题，故添加了站内搜索功能。 a.前言我的博客采用的是hexo进行搭建，选择的是next主题。而next主题其实也集成了几种搜索插件，我采用的是local-search插件。此插件会生成一个search.xml文件，其中包含了你网站上所有相关的数据，搜索的时候就从这个文件中根据关键字检索出相应的链接。 b.安装在项目的根目录下，通过cmd或者Git Bash执行下面这条命令以安装hexo-generator-searchdb插件。 1npm install hexo-generator-searchdb --save c.配置1.修改站点配置文件打开站点配置文件，即根目录下的_config.yml文件，添加以下代码 12345search: path: search.xml ##索引文件的路径，相对于站点根目录 field: post ##搜索范围，默认是 post，还可以选择 page、all，设置成 all 表示搜索所有页面 format: html limit: 10000 ##限制搜索的条目数 注意冒号和空格的处理。这些参数都是可以修改的，不过默认设置为这样就行了，一般也不需要修改。如果要修改，请查看hexo-generator-searchdb配置参数。 2.修改主题配置文件打开主题配置文件，即themes/next下的_config.yml文件，将local_search下的enable修改为true，即启用local_search插件。 1234567891011local_search: enable: True # If auto, trigger search by changing input. # If manual, trigger search by pressing enter key or search button. trigger: auto # Show top n results per article, show all results by setting to -1 top_n_per_article: 1 # Unescape html strings to the readable one. unescape: false # Preload the search data when the page loads. preload: false d.部署 执行上述步骤后，再运行以下命令，部署上去，就可以看到在页面上有一个搜索图标，点击并输入相关文字，就可以看到搜索结果，点击即可跳转到对应页面，十分方便。 123#hexo clean#hexo g#hexo d e.最终效果见本人博客主页","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.codebai.top/tags/hexo/"}]},{"title":"Win10环境下基于Hexo的静态博客环境搭建，及其阿里云部署","slug":"Win10环境下基于Hexo的静态博客环境搭建，及其阿里云部署","date":"2020-03-20T19:12:58.000Z","updated":"2020-03-26T14:48:10.858Z","comments":true,"path":"posts/3c1d3d37.html","link":"","permalink":"https://www.codebai.top/posts/3c1d3d37.html","excerpt":"","text":"","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://www.codebai.top/tags/hexo/"},{"name":"aliyun.win10","slug":"aliyun-win10","permalink":"https://www.codebai.top/tags/aliyun-win10/"},{"name":"git","slug":"git","permalink":"https://www.codebai.top/tags/git/"}]},{"title":"tar命令中的-C作用","slug":"tar命令中的-C作用","date":"2020-03-20T16:23:00.000Z","updated":"2020-03-27T09:56:59.657Z","comments":true,"path":"posts/f9a72a7f.html","link":"","permalink":"https://www.codebai.top/posts/f9a72a7f.html","excerpt":"","text":"一直不知道解压命令如何指定文件夹，今天学到了一个 -C 参数 1#tar -xvf nginx-1.16.0.tar.gz -C &#x2F;usr&#x2F;local 注释：上面的命令将 nginx-1.16.0.tar.gz 这个压缩包解压到/usr/local目录下。 -C 选项的作用是：指定需要解压到的目录。","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.codebai.top/tags/linux/"},{"name":"shell命令","slug":"shell命令","permalink":"https://www.codebai.top/tags/shell%E5%91%BD%E4%BB%A4/"}]},{"title":"需要记住的断点续传命令wget -c 网址","slug":"需要记住的断点续传命令wget -c网址","date":"2020-03-20T16:11:41.000Z","updated":"2020-03-26T14:51:35.766Z","comments":true,"path":"posts/c9f35c85.html","link":"","permalink":"https://www.codebai.top/posts/c9f35c85.html","excerpt":"","text":"&emsp; 当文件特别大或者网络特别慢的时候，往往一个文件还没有下载完，连接就已经被切断，此时就需要断点续传。特别是使用谷歌浏览器下载东西的时候！wget的断点续传是自动的，只需要使用-c参数，例如： 1#wget -c https:&#x2F;&#x2F;nginx.org&#x2F;download&#x2F;nginx-1.10.1.tar.gz","categories":[{"name":"Linux","slug":"Linux","permalink":"https://www.codebai.top/categories/Linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.codebai.top/tags/linux/"}]},{"title":"linux 下如何安装nginx","slug":"linux安装nginx","date":"2020-03-20T15:28:16.000Z","updated":"2020-03-27T10:08:22.610Z","comments":true,"path":"posts/e465cc7b.html","link":"","permalink":"https://www.codebai.top/posts/e465cc7b.html","excerpt":"1)下载nginx安装包1#wget -c https://nginx.org/download/nginx-1.16.0.tar.gz 2）解压到/usr/local目录1#tar -xvf nginx-1.16.0.tar.gz -C /usr/local","text":"1)下载nginx安装包1#wget -c https://nginx.org/download/nginx-1.16.0.tar.gz 2）解压到/usr/local目录1#tar -xvf nginx-1.16.0.tar.gz -C /usr/local 此时压缩包已经解压完成，可以在当前目录将压缩包删除 1rm nginx-1.16.0.tar.gz 3)进入/usr/local目录，确认nginx解压到该目录下12#cd &#x2F;usr&#x2F;local#ls 4)进入nginx-1.16.0目录，会发现该目录下有一个configure文件，执行该配置文件。123#cd nginx-1.16.0&#x2F;#ls#.&#x2F;configure 5)编译并安装nginx。（问题的解决方案在最后）12#make#make install 6)查找nginx安装目录。1#whereis nginx 7)进入安装目录。12#cd &#x2F;usr&#x2F;local&#x2F;nginx#ls 8)由于nginx默认通过80端口访问，而Linux默认情况下不会开发该端口号，因此需要开放linux的80端口供外部访问。1#&#x2F;sbin&#x2F;iptables -I INPUT -p tcp –-dport 80 -j ACCEPT 9)进入/usr/local/nginx/sbin目录，启动nginx。12#cd sbin#.&#x2F;nginx 没有任何消息，代表启动成功。此时，便可以通过“公网IP+端口”的方式访问 http://xx.xx.xxx.xxx:80/ 进入nginx欢迎页面了。注：可以使用./nginx -s stop命令停止服务,使用的时候要按照9）开启nginx 可能遇到的问题1）安装nginx时出现In function‘ngx_murmur_hash2’ ‘ngx_murmurhash.o failed’等错误，如： 12345678910111213141516171819202122URCE&#x3D;2 -I src&#x2F;core -I src&#x2F;event -I src&#x2F;event&#x2F;modules -I src&#x2F;os&#x2F;unix -I &#x2F;home&#x2F;always&#x2F;tools&#x2F;nginx-rtmp-module -I &#x2F;usr&#x2F;include&#x2F;libxml2 -I objs \\ -o objs&#x2F;src&#x2F;core&#x2F;ngx_murmurhash.o \\ src&#x2F;core&#x2F;ngx_murmurhash.csrc&#x2F;core&#x2F;ngx_murmurhash.c: In function ‘ngx_murmur_hash2’:src&#x2F;core&#x2F;ngx_murmurhash.c:37:11: error: this statement may fall through [-Werror&#x3D;implicit-fallthrough&#x3D;] h ^&#x3D; data[2] &lt;&lt; 16; ~~^~~~~~~~~~~~~~~~src&#x2F;core&#x2F;ngx_murmurhash.c:38:5: note: here case 2: ^~~~src&#x2F;core&#x2F;ngx_murmurhash.c:39:11: error: this statement may fall through [-Werror&#x3D;implicit-fallthrough&#x3D;] h ^&#x3D; data[1] &lt;&lt; 8; ~~^~~~~~~~~~~~~~~src&#x2F;core&#x2F;ngx_murmurhash.c:40:5: note: here case 1: ^~~~cc1: all warnings being treated as errorsobjs&#x2F;Makefile:659: recipe for target &#39;objs&#x2F;src&#x2F;core&#x2F;ngx_murmurhash.o&#39; failedmake[1]: *** [objs&#x2F;src&#x2F;core&#x2F;ngx_murmurhash.o] Error 1make[1]: Leaving directory &#39;&#x2F;home&#x2F;always&#x2F;tools&#x2F;nginx-1.10.3&#39;Makefile:8: recipe for target &#39;build&#39; failedmake: *** [build] Error 2 原因:是将警告当成了错误处理解决办法打开./objs/Makefile， 1#nano .&#x2F;objs&#x2F;Makefile CFLAGS = -pipe -O -W -Wall -Wpointer-arith -Wno-unused-parameter -Werror -g (去掉-Werror)ctrl + S保存 Ctrl + X退出nano回到终端再重新make -Wall 表示打开gcc的所有警告-Werror，它要求gcc将所有的警告当成错误进行处理 2）安装nginx报错“src/os/unix/ngx_user.c:26:7: error: ‘struct crypt_data’ has no member named ‘current_salt’” 解决办法打开报错的位置文件，我的位置是/usr/local/nginx-1.16.0/src/os/unix版本号不一样，注意自己的版本和错误位置，正常安装就是我下面的位置 1#nano &#x2F;usr&#x2F;local&#x2F;nginx-1.16.0&#x2F;src&#x2F;os&#x2F;unix&#x2F;ngx_user.c 直接将current_salt相关的信息给注释掉ctrl + S保存 Ctrl + X退出nano回到终端注意：要回到正确的位置，以防出错可以直接执行以下命令 1#cd &#x2F;usr&#x2F;local&#x2F;nginx-1.16.0 再重新make make install 12#make#make install","categories":[],"tags":[{"name":"linux","slug":"linux","permalink":"https://www.codebai.top/tags/linux/"},{"name":"install","slug":"install","permalink":"https://www.codebai.top/tags/install/"}]}],"categories":[{"name":"格力实习","slug":"格力实习","permalink":"https://www.codebai.top/categories/%E6%A0%BC%E5%8A%9B%E5%AE%9E%E4%B9%A0/"},{"name":"毕业设计","slug":"毕业设计","permalink":"https://www.codebai.top/categories/%E6%AF%95%E4%B8%9A%E8%AE%BE%E8%AE%A1/"},{"name":"电脑装机","slug":"电脑装机","permalink":"https://www.codebai.top/categories/%E7%94%B5%E8%84%91%E8%A3%85%E6%9C%BA/"},{"name":"MarkDown","slug":"MarkDown","permalink":"https://www.codebai.top/categories/MarkDown/"},{"name":"Linux","slug":"Linux","permalink":"https://www.codebai.top/categories/Linux/"}],"tags":[{"name":"wincc","slug":"wincc","permalink":"https://www.codebai.top/tags/wincc/"},{"name":"黑苹果","slug":"黑苹果","permalink":"https://www.codebai.top/tags/%E9%BB%91%E8%8B%B9%E6%9E%9C/"},{"name":"hexo","slug":"hexo","permalink":"https://www.codebai.top/tags/hexo/"},{"name":"aliyun.win10","slug":"aliyun-win10","permalink":"https://www.codebai.top/tags/aliyun-win10/"},{"name":"git","slug":"git","permalink":"https://www.codebai.top/tags/git/"},{"name":"linux","slug":"linux","permalink":"https://www.codebai.top/tags/linux/"},{"name":"shell命令","slug":"shell命令","permalink":"https://www.codebai.top/tags/shell%E5%91%BD%E4%BB%A4/"},{"name":"install","slug":"install","permalink":"https://www.codebai.top/tags/install/"}]}