<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Markdown（更改字体、颜色、大小，设置文字背景色，调整图片大小设置居中）</title>
    <url>/posts/5080762b.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><blockquote>
<p>基础知识：<br>Markdown 通过简单标记语法，使普通文本内容具有一定格式。但它本身不支持修改字体、字号与颜色等功能的。不过可以通过简单地HTML标签来实现<br>Size：规定文本的尺寸大小，取值从 1 到 7 ，浏览器默认值是 3.</p>
</blockquote>
<a id="more"></a>

<h1 id="一、更改字体、大小、颜色"><a href="#一、更改字体、大小、颜色" class="headerlink" title="一、更改字体、大小、颜色"></a>一、更改字体、大小、颜色</h1><h2 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a><font color=Blue>Markdown语法</font></h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">"黑体"</span>&gt;</span>我是黑体字<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">"微软雅黑"</span>&gt;</span>我是微软雅黑<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">"STCAIYUN"</span>&gt;</span>我是华文彩云<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">red</span>&gt;</span>我是红色<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#008000</span>&gt;</span>我是绿色<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">Blue</span>&gt;</span>我是蓝色<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">5</span>&gt;</span>我是尺寸<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">"黑体"</span> <span class="attr">color</span>=<span class="string">green</span> <span class="attr">size</span>=<span class="string">5</span>&gt;</span>我是黑体，绿色，尺寸为5<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br></pre></td></tr></table></figure></div>

<h2 id="效果如下"><a href="#效果如下" class="headerlink" title="效果如下"></a><font color=Blue>效果如下</font></h2><p><font face="黑体">我是黑体字</font><br><font face="微软雅黑">我是微软雅黑</font><br><font face="STCAIYUN">我是华文彩云</font><br><font color=red>我是红色</font><br><font color=#008000>我是绿色</font><br><font color=Blue>我是蓝色</font><br><font size=5>我是尺寸</font><br><font face="黑体" color=green size=5>我是黑体，绿色，尺寸为5</font> </p>
<h1 id="二、为文字添加背景色"><a href="#二、为文字添加背景色" class="headerlink" title="二、为文字添加背景色"></a>二、为文字添加背景色</h1><blockquote>
<p>由于 style 标签和标签的 style 属性不被支持，所以这里只能是借助 table, tr, td 等表格标签的 bgcolor 属性来实现背景色。故这里对于文字背景色的设置，只是将那一整行看作一个表格，更改了那个格子的背景色（bgcolor）</p>
</blockquote>
<h2 id="Markdown语法-1"><a href="#Markdown语法-1" class="headerlink" title="Markdown语法"></a><font color=Blue>Markdown语法</font></h2><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">#bfa</span>&gt;</span>背景色#bfa<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<h2 id="效果如下-1"><a href="#效果如下-1" class="headerlink" title="效果如下"></a><font color=Blue>效果如下</font></h2><table><tr><td bgcolor=black>背景色black</td></tr></table>

<h1 id="三、设置图片大小"><a href="#三、设置图片大小" class="headerlink" title="三、设置图片大小"></a>三、设置图片大小</h1><h2 id="原图默认大小"><a href="#原图默认大小" class="headerlink" title="原图默认大小"></a>原图默认大小</h2><img src="https://s1.ax1x.com/2020/03/23/8ojlQO.jpg" alt="良医">

<h2 id="1、设置图片百分比"><a href="#1、设置图片百分比" class="headerlink" title="1、设置图片百分比"></a>1、设置图片百分比</h2><h3 id="Markdown语法-2"><a href="#Markdown语法-2" class="headerlink" title="Markdown语法"></a><font color=Blue>Markdown语法</font></h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://s1.ax1x.com/2020/03/23/8ojlQO.jpg"</span> <span class="attr">width</span>=<span class="string">"50%"</span> <span class="attr">height</span>=<span class="string">"50%"</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<h3 id="效果如下-2"><a href="#效果如下-2" class="headerlink" title="效果如下"></a><font color=Blue>效果如下</font></h3><img src="https://s1.ax1x.com/2020/03/23/8ojlQO.jpg" width="50%" height="50%">

<h2 id="2、设置图片大小"><a href="#2、设置图片大小" class="headerlink" title="2、设置图片大小"></a>2、设置图片大小</h2><h3 id="Markdown语法-3"><a href="#Markdown语法-3" class="headerlink" title="Markdown语法"></a><font color=Blue>Markdown语法</font></h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://s1.ax1x.com/2020/03/23/8ojlQO.jpg"</span> <span class="attr">width</span>=<span class="string">"201"</span> <span class="attr">height</span>=<span class="string">"130"</span> &gt;</span></span><br></pre></td></tr></table></figure></div>
<h3 id="效果如下-3"><a href="#效果如下-3" class="headerlink" title="效果如下"></a><font color=Blue>效果如下</font></h3><img src="https://s1.ax1x.com/2020/03/23/8ojlQO.jpg" width="201" height="130" >

<h2 id="3、设置图片居中"><a href="#3、设置图片居中" class="headerlink" title="3、设置图片居中"></a>3、设置图片居中</h2><h3 id="方法一：最常用的使用方法-使用center标签"><a href="#方法一：最常用的使用方法-使用center标签" class="headerlink" title="方法一：最常用的使用方法,使用center标签"></a>方法一：最常用的使用方法,使用<code>center</code>标签</h3><blockquote>
<p>可以设置居中，但是不易更改图片大小<br>实际上<code>center</code>标签会使中间的说有内容都会居中</p>
</blockquote>
<h3 id="Markdown语法-4"><a href="#Markdown语法-4" class="headerlink" title="Markdown语法"></a><font color=Blue>Markdown语法</font></h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MARKDOWN"><figure class="iseeu highlight /markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">center</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">![<span class="string">good doctor</span>](<span class="link">https://s1.ax1x.com/2020/03/23/8ojlQO.jpg "良医"</span>)</span><br><span class="line"><span class="section"># good doctor是当图片无法显示的时候出现在界面上，良医是鼠标放在图片上显示的内容，具体可以在效果图上自己演示</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span></span><br></pre></td></tr></table></figure></div>
<h3 id="效果如下-4"><a href="#效果如下-4" class="headerlink" title="效果如下"></a><font color=Blue>效果如下</font></h3><center>

<p><img src="https://s1.ax1x.com/2020/03/23/8ojlQO.jpg" alt="good doctor" title="良医"></p>
</center>

<h3 id="方法二：使用HTML中的标签"><a href="#方法二：使用HTML中的标签" class="headerlink" title="方法二：使用HTML中的标签"></a>方法二：使用HTML中的标签</h3><blockquote>
<p>1.<strong>这里需要用的HTML中的块元素标签<code>div</code>, 使用内嵌样式align=right(left,center,right)</strong><br>  2.使用这种方法比较容易更改图片的位置和大小</p>
</blockquote>
<h3 id="Markdown语法-5"><a href="#Markdown语法-5" class="headerlink" title="Markdown语法"></a><font color=Blue>Markdown语法</font></h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="HTML"><figure class="iseeu highlight /html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">center</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://s1.ax1x.com/2020/03/23/8ojlQO.jpg"</span> <span class="attr">width</span>=<span class="string">"50%"</span> <span class="attr">height</span>=<span class="string">"50%"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div>
<h3 id="效果如下-5"><a href="#效果如下-5" class="headerlink" title="效果如下"></a><font color=Blue>效果如下</font></h3><div align=center><img src="https://s1.ax1x.com/2020/03/23/8ojlQO.jpg" width="60%" height="60%"></div>


<h1 id="四、有关图片和文字的内容会继续补充"><a href="#四、有关图片和文字的内容会继续补充" class="headerlink" title="四、有关图片和文字的内容会继续补充"></a>四、有关图片和文字的内容会继续补充</h1><center>

<h2 id="To-be-continued"><a href="#To-be-continued" class="headerlink" title="To be continued"></a>To be continued</h2>]]></content>
      <categories>
        <category>MarkDown</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>wincc数据开放性</title>
    <url>/posts/a074d128.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css">]]></content>
      <categories>
        <category>毕业设计</category>
      </categories>
      <tags>
        <tag>wincc</tag>
      </tags>
  </entry>
  <entry>
    <title>Wincc报表系统</title>
    <url>/posts/183b4f5a.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>wincc报表系统主要是用于打印使用，具体内容在布局中<br>1.新建页面布局</p>
<a id="more"></a>
<p><img src="/Wincc%E6%8A%A5%E8%A1%A8%E7%B3%BB%E7%BB%9F/20200416023950683.png" alt=""></p>
<blockquote>
<p>1.静态层包括布局的页眉和页脚，用于输出公司名称、公司标志、项目名称、布局名称、页码、时间等。<br>2.动态层包括输出组态和运行系统数据的动态对象。<br>3.只有静态对象和系统对象可插入到静态层。静态对象和动态对象均可插入动态层。</p>
</blockquote>
<p>2.新建打印作业<br><img src="/Wincc%E6%8A%A5%E8%A1%A8%E7%B3%BB%E7%BB%9F/20200416024417286.png" alt=""><br>3.打印按钮的c脚本</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> option(mbcs)</span></span><br><span class="line">RPTJobPrint(<span class="string">"打印作业001"</span>);</span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>毕业设计</category>
      </categories>
      <tags>
        <tag>wincc</tag>
      </tags>
  </entry>
  <entry>
    <title>Wincc报警记录</title>
    <url>/posts/1487dd59.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="WinCC-V7-5-模拟量报警组态"><a href="#WinCC-V7-5-模拟量报警组态" class="headerlink" title="WinCC V7.5 模拟量报警组态"></a>WinCC V7.5 模拟量报警组态</h2><p>由模拟量触发的超过限制值、值相同以及值不同的报警称为模拟量报警，例如温度低于最小值，转速超过一定值等。<br>具体步骤如下</p>
<a id="more"></a>
<p>1.首先在项目管理器左边菜单中双击“报警记录”。<br>2.在弹出的报警记录编辑器中选择“限值监视”。<br>3.在右边消息列表中选择“变量”。<br>4.选择需要监视的模拟量。<br><img src="/Wincc%E6%8A%A5%E8%AD%A6%E8%AE%B0%E5%BD%95/20200415101457694.png" alt=""><br>5.点击图中变量左边的箭头。<br><img src="/Wincc%E6%8A%A5%E8%AD%A6%E8%AE%B0%E5%BD%95/20200415101552735.png" alt=""><br>6.在下一行的下拉列表中选择比较方式。<br><img src="/Wincc%E6%8A%A5%E8%AD%A6%E8%AE%B0%E5%BD%95/20200415101605517.png" alt=""><br>7.这里我们选择上限，消息号填写2，比较值填写80，那么当变量值大于等于80，触发报警。<br><img src="/Wincc%E6%8A%A5%E8%AD%A6%E8%AE%B0%E5%BD%95/20200415101610497.png" alt=""><br>注意：这里的消息号是手动填写的，必须唯一。填写后，系统会自动创建编号为2的报警。<br>8.选择消息列表，我们能看到系统创建的报警和报警消息文本。<br><img src="/Wincc%E6%8A%A5%E8%AD%A6%E8%AE%B0%E5%BD%95/20200415101629174.png" alt=""><br>9.在图形编辑器中打开画面，从右边的控件列表中， 把WinCC AlarmControl控件拖拽到画面，用于显示报警。<br><img src="/Wincc%E6%8A%A5%E8%AD%A6%E8%AE%B0%E5%BD%95/20200415111146654.png" alt=""><br>10.在弹出的控件属性对话框中（双击控件也可以弹出熟悉对话框），选择消息列表，把需要显示的块从左边列表添加到右边列表，然后保存画面。<br><img src="/Wincc%E6%8A%A5%E8%AD%A6%E8%AE%B0%E5%BD%95/20200415101707069.png" alt=""><br>11.最后在项目编辑器中选择“计算机”，然后双击计算机名，在弹出的属性对话框中选择“启动”列表，在列表中勾选“报警记录运行系统”， 然后激活项目。<br><img src="/Wincc%E6%8A%A5%E8%AD%A6%E8%AE%B0%E5%BD%95/20200415101725160.png" alt=""><br>项目运行后，可以看到，当触发变量为86，报警控件将显示报警触发的日期，时间，消息文本等。消息文本中还将显示限制值为80，比较方式为超出上限，超出值为85。<br><img src="/Wincc%E6%8A%A5%E8%AD%A6%E8%AE%B0%E5%BD%95/20200415110959840.png" alt=""></p>
<h2 id="添加声音报警"><a href="#添加声音报警" class="headerlink" title="添加声音报警"></a>添加声音报警</h2><p>1.<br>C脚本播放wav格式文件</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">"apdefap.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OnClick</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">pragma</span> code(<span class="meta-string">"Winmm.dll"</span>)</span></span><br><span class="line">    <span class="function">VOID WINAPI <span class="title">PlaySoundA</span><span class="params">(<span class="keyword">char</span>*pszSound,<span class="keyword">char</span>*hmode,DWORD dwflag)</span></span>;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">pragma</span> code()</span></span><br><span class="line">    PlaySoundA(<span class="string">"C:\\Windows\\Media\\tada.wav"</span>,<span class="literal">NULL</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p>C脚本触发pc蜂鸣器</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> code(<span class="meta-string">"kernel32.dll"</span>)</span></span><br><span class="line"><span class="function">BOOL <span class="title">Beep</span><span class="params">(<span class="keyword">int</span> dwFreq,<span class="keyword">int</span> dwDuration)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> code()</span></span><br><span class="line">Beep(<span class="number">1000</span>,<span class="number">100</span>);</span><br></pre></td></tr></table></figure></div>
<p>1.新建内部变量（注意数据类型）<br><img src="/Wincc%E6%8A%A5%E8%AD%A6%E8%AE%B0%E5%BD%95/20200416012022129.png" alt=""><br>2.在报警记录中天添加两条消息alarm11<br><img src="/Wincc%E6%8A%A5%E8%AD%A6%E8%AE%B0%E5%BD%95/20200416012634902.png" alt=""><br><img src="/Wincc%E6%8A%A5%E8%AD%A6%E8%AE%B0%E5%BD%95/20200416012739268.png" alt=""><br>3.在报警器》消息分配<br><img src="/Wincc%E6%8A%A5%E8%AD%A6%E8%AE%B0%E5%BD%95/20200416013519483.png" alt=""><br>4.报警器》信号分配，添加两个声音文件，分别用户用于“错误”消息类别和“系统，无确认”消息类别<br><img src="/Wincc%E6%8A%A5%E8%AD%A6%E8%AE%B0%E5%BD%95/20200416013707930.png" alt=""></p>
<blockquote>
<p>参考文献:<br><code>http://www.ad.siemens.com.cn/service/elearning/course/1791.html</code></p>
</blockquote>
]]></content>
      <categories>
        <category>毕业设计</category>
      </categories>
      <tags>
        <tag>wincc</tag>
      </tags>
  </entry>
  <entry>
    <title>wincc变量记录</title>
    <url>/posts/84088e0b.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="变量记录："><a href="#变量记录：" class="headerlink" title="变量记录："></a>变量记录：</h3><p>归档系统负责运行状态下的过程值归档<br>归档系统首先处理缓存于运行系统数据库中的过程值，然后再将过程值写到归档数据库中。</p>
<a id="more"></a>
<p><img src="/wincc%E5%8F%98%E9%87%8F%E8%AE%B0%E5%BD%95/20200415060349273.png" alt=""><br>过程值归档涉及下列 WinCC 子系统： </p>
<ul>
<li>自动化系统（AS）：<br>存储通过通讯驱动程序传送到 WinCC 的过程值。</li>
<li>数据管理器（DM）：<br>处理过程值，然后通过过程变量将其返回到归档系统。</li>
<li>归档系统：<br>处理采集到的过程值（例如，通过产生平均值）。处理方法取决于组态归档的方式。</li>
<li>运行系统数据库（DB）：<br>保存要归档的过程值。</li>
</ul>
<h3 id="归档的术语定义"><a href="#归档的术语定义" class="headerlink" title="归档的术语定义"></a>归档的术语定义</h3><ul>
<li>采集周期：<br>确定何时在自动化系统中读出过程变量的数值。<br>例如，可以为过程值的连续周期性归档组态一个采集周期。</li>
<li>归档周期：<br>确定何时在归档数据库中保存所处理的过程值。<br>例如，可以为过程值的连续周期性归档组态一个归档周期。</li>
</ul>
<h3 id="组态处理"><a href="#组态处理" class="headerlink" title="组态处理"></a>组态处理</h3><p>如果归档周期&gt;采集周期，则在归档周期内采集的过程值可组态下列处理:<br>当前值:保存所采集的最后一个过程值。<br>总计:保存所有采集到的过程值的总和。<br>最大值:保存所有采集的过程值的最大值。<br>最小值:保存所有采集的过程值的最小值。<br>平均值:保存所有采集到的过程值的平均值。<br>动作:最近采集的过程值由全局脚本中创建的函数进行计算。如果归档周期=采集周期，这并不表示同时启动采集和归档。在采集和归档之间可能相差高达一个采集周期</p>
<h3 id="WinCC-V7-5-变量变化时归档（本人使用）"><a href="#WinCC-V7-5-变量变化时归档（本人使用）" class="headerlink" title="WinCC V7.5 变量变化时归档（本人使用）"></a>WinCC V7.5 变量变化时归档（本人使用）</h3><p>以下组态将创建只有过程变量的值发生变化时才进行归档。</p>
<ol>
<li>在WinCC项目管理器左边列表双击“变量记录”，打开变量记录编辑器。</li>
<li>在变量记录编辑器中，选择归档下的过程值归档，点击鼠标右键，在菜单中选择“新增过程值归档”。<br><img src="/wincc%E5%8F%98%E9%87%8F%E8%AE%B0%E5%BD%95/20200415060939639.png" alt=""></li>
<li>选择新建的过程值归档。</li>
<li>在右边列表中选择添加过程值变量，在弹出的变量选择界面中选择需要归档的过程变量。<br><img src="/wincc%E5%8F%98%E9%87%8F%E8%AE%B0%E5%BD%95/20200415061016328.png" alt=""></li>
<li>在过程变量属性列表中，选择采集类型为“非周期-有变化时”，采集周期为500ms，归档/显示周期为“1 day”。归档显示周期我们尽量设置大一些，虽然这个周期不影响数据的归档，但是会影响数据的显示。例如在WinCC在线表格控件中，即使变量没有变化，每到显示周期，WinCC在线表格控件上也会显示一条记录。<br><img src="/wincc%E5%8F%98%E9%87%8F%E8%AE%B0%E5%BD%95/20200415061024259.png" alt=""></li>
<li>打开组图画面，在控件列表中选中在线表格控件WinCC OnlineTableControl拖拽到画面。<br><img src="/wincc%E5%8F%98%E9%87%8F%E8%AE%B0%E5%BD%95/20200415061032018.png" alt=""></li>
<li>在弹出的控件属性对话框中(双击控件也可以打开属性对话框)，选择“数值列”。</li>
<li>数据源选择：归档变量。</li>
<li>点击变量名称选择按钮。</li>
<li>在弹出的选择对话框中选择已归档的变量名称。最后保存画面。<br><img src="/wincc%E5%8F%98%E9%87%8F%E8%AE%B0%E5%BD%95/20200415061045909.png" alt=""><br><img src="/wincc%E5%8F%98%E9%87%8F%E8%AE%B0%E5%BD%95/20200415061045909.png" alt=""></li>
<li>在WinCC项目管理器中选择“计算机”。</li>
<li>双击右边的计算机名。</li>
<li>在弹出的属性对话框中选择启动列表，勾选“变量记录运行系统”。<br><img src="/wincc%E5%8F%98%E9%87%8F%E8%AE%B0%E5%BD%95/20200415062151774.png" alt=""><br>项目激活以后，在画面上能看到变量每变化一次归档一次。<blockquote>
<p>参考文献 【wincc使用说明】</p>
</blockquote>
</li>
</ol>
]]></content>
      <categories>
        <category>毕业设计</category>
      </categories>
      <tags>
        <tag>wincc</tag>
      </tags>
  </entry>
  <entry>
    <title>wincc画面管理</title>
    <url>/posts/bc7cd307.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css">]]></content>
  </entry>
  <entry>
    <title>SIMATIC S7-1500 PLC硬件组态</title>
    <url>/posts/ab29944c.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>硬件组态是SIMATIC S7-1500系列PLC编程的第一步。通常情况下，编程调试人员会根据电气图纸及PLC实物，从硬件目录中依次添加CPU及机架上的各个模块。如果机架上的模块比较多，可能会花费比较长的时间。今天这篇文章，我想给大家介绍一个小技巧，可以实现对CPU及机架上的信号模块的快速组态。</p>
<a id="more"></a>

<p>首先，我们打开博途（TIA Portal）开发环境，新建一个项目。在新建的项目中，双击左侧导航栏“添加新设备（Add new device）”，在弹出的对话框中点击【控制器（Controler）】-【SIMATIC S7-1500】-【CPU】。我们先不选择具体的CPU的型号，而是选择【不指定CPU（unspecified CPU 1500）】，如下图：<br><img src="/SIMATIC-S7-1500-PLC%E7%A1%AC%E4%BB%B6%E7%BB%84%E6%80%81/20200415031254250.png" alt=""><br>点击【OK】确认，CPU就会被添加到项目的硬件组态中。如下图：<br><img src="/SIMATIC-S7-1500-PLC%E7%A1%AC%E4%BB%B6%E7%BB%84%E6%80%81/20200415031310579.png" alt=""><br>这时，在项目硬件组态的下方有一个提示：当前未指定CPU型号，可以在硬件目录中选择具体的CPU或者检测（detect）目前连接的设备。后者就是我们要介绍的技巧。</p>
<p>首先，我们用网线把当前运行博途组态的电脑和设备的CPU连接起来，然后点击【检测（detect）】。博途（TIA Portal）会自动跳转到网络搜索界面。如下图：<br><img src="/SIMATIC-S7-1500-PLC%E7%A1%AC%E4%BB%B6%E7%BB%84%E6%80%81/20200415031326439.png" alt=""><br>配置当前使用的PG/PC接口的类型和使用的网口，点击【开始搜索（Start search）】。博途会搜索到当前网络所连接的CPU，如下图：<br><img src="https://i.loli.net/2020/04/15/4yZOP1Ie8HzrlFS.png" alt="20180609070904152849934487247 拷贝.png"><br>选中想要组态的CPU，点击【检测（Detect）】。你会发现该CPU及机架上的所有模块会自动添加到当前项目的硬件组态中，如下图：<img src="/SIMATIC-S7-1500-PLC%E7%A1%AC%E4%BB%B6%E7%BB%84%E6%80%81/20200415031522213.png" alt=""></p>
]]></content>
      <categories>
        <category>毕业设计</category>
      </categories>
      <tags>
        <tag>wincc</tag>
      </tags>
  </entry>
  <entry>
    <title>wincc与S7-1500/1200连接</title>
    <url>/posts/f183518d.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>自 WinCC V7.2版本起，软件新增加了“ SIMATIC S7-1200、S7-1500 Channel”通道，用于WinCC与S7-1200/S7-1500PLC之间的通信此动只支持以太网通讯，使用TCP/IP协议。</p>
<a id="more"></a>
<h2 id="与s7-1200和s7-1500通信新功能"><a href="#与s7-1200和s7-1500通信新功能" class="headerlink" title="与s7-1200和s7-1500通信新功能"></a>与s7-1200和s7-1500通信新功能</h2><blockquote>
<p>1.变量的循环读取<br>2.绝对寻址<br>3.符号寻址<br>4.时间序列报告（程序报警）{装载AS消息（s7-1500）}<br>5.时间同步和密码保护</p>
</blockquote>
<h2 id="在wincc中使用s7-1200-s7-1500变量"><a href="#在wincc中使用s7-1200-s7-1500变量" class="headerlink" title="在wincc中使用s7-1200/s7-1500变量"></a>在wincc中使用s7-1200/s7-1500变量</h2><h3 id="方法一：导出-导入功能-本次用的方法二，方法一暂时不总结"><a href="#方法一：导出-导入功能-本次用的方法二，方法一暂时不总结" class="headerlink" title="方法一：导出/导入功能(本次用的方法二，方法一暂时不总结)"></a>方法一：导出/导入功能(本次用的方法二，方法一暂时不总结)</h3><p>1.1、从TIA Portal导出变量（仅限绝对导出）<br>1.2、通过Configuration Studio导入Wincc</p>
<h3 id="方法二：装载AS变量（变量和报警）"><a href="#方法二：装载AS变量（变量和报警）" class="headerlink" title="方法二：装载AS变量（变量和报警）"></a>方法二：装载AS变量（变量和报警）</h3><h4 id="1、设置PLC通讯参数"><a href="#1、设置PLC通讯参数" class="headerlink" title="1、设置PLC通讯参数"></a>1、设置PLC通讯参数</h4><p>在TIA Portal中打开S7-1500项目，关于PLC硬件组态步骤<a href="">查看此文</a>，在树形菜单中打开“设备组态”，打开网络视图点击通讯端口，在“属性”界面中设置通讯参数，在“子网”列表中可把接口连接到某一子网,设置“IP地址”和“子网掩码”参数。简单通讯情况下，可以不用启用IP路由器，如图所示（ip地址为plc的ip）<br><img src="/wincc%E9%80%9A%E8%AE%AF/20200415014905321.png" alt=""></p>
<h4 id="2、在S7-PLCSIM中新建s7-1500的仿真，之后将组态下载到CPU，会发现模拟仿真在运行。PLC组态完成"><a href="#2、在S7-PLCSIM中新建s7-1500的仿真，之后将组态下载到CPU，会发现模拟仿真在运行。PLC组态完成" class="headerlink" title="2、在S7-PLCSIM中新建s7-1500的仿真，之后将组态下载到CPU，会发现模拟仿真在运行。PLC组态完成"></a>2、在S7-PLCSIM中新建s7-1500的仿真，之后将组态下载到CPU，会发现模拟仿真在运行。PLC组态完成</h4><h3 id="3、在PLC和电脑之间接入以太网通讯电线，测试电脑与PLC之间物理连接是否正常。"><a href="#3、在PLC和电脑之间接入以太网通讯电线，测试电脑与PLC之间物理连接是否正常。" class="headerlink" title="3、在PLC和电脑之间接入以太网通讯电线，测试电脑与PLC之间物理连接是否正常。"></a>3、在PLC和电脑之间接入以太网通讯电线，测试电脑与PLC之间物理连接是否正常。</h3><p>选择操作系统左下角“开始”菜单，在最下一行运行栏中输入“CMD”命令，然后敲回车进入DOS命令界面，在界面中输入ping命令，格式： ping(PLC IP地址)回车，如果物理连接正常如图所示：如果显示超时或者硬件故障，请检查IP地址设置、网卡驱动以及物理网线。<br><img src="/wincc%E9%80%9A%E8%AE%AF/20200415021448558.png" alt=""></p>
<h4 id="4、为PLC和WinCC建立连接"><a href="#4、为PLC和WinCC建立连接" class="headerlink" title="4、为PLC和WinCC建立连接"></a>4、为PLC和WinCC建立连接</h4><p>本文使用的PLC型号为西门子S7-1500，并且在实验室中成功连接测试完成与PLC的实体连接，要实现WinCC与PLC设备的连接，需要进行以下三个步骤：<br>4.1 配置IPv4局域网<br>查看PLC的IP地址，格式为xxx.xxx.xxx.xxx，本文连接的PLC的IP为：192.168.23.199，其中前三段数字192.168.23.xxx为PLC所在的局域网网段，xxx为当下局域网下的具体地址。需要将WinCC客户机配置到同一局域网中，具体步骤是：右键PC桌面右下角网络图标，打开”网络和共享中心”&gt;”更改适配器设置”&gt;右键”本地连接”打开属性。<br> <img src="/wincc%E9%80%9A%E8%AE%AF/20200415022526465.png" alt=""></p>
<center>图3-6 本地连接属性</center>
双击IPv4进行配置，如下图：  
 ![](/wincc通讯/20200415022536948.png)
<center>图3-7 IPv4协议属性</center>
IP地址填写192.168.23.yyy网段下的地址且不同与PLC的IP地址即可，IP网段中的yyy的取值为2到254，子网掩码设定图3-7示：
4.2配置PG/PC接口
在控制面板中的类别图标即设置大图标里面有一个选项为设置PG/PC接口，打开后如图3-8所示界面。
下拉"应用程序访问点"，选择"添加/删除"按钮，图3-9示。
填入访问点的名称，名称不固定格式，满足一般的命名规则即可。本文中填写为S7_1500v (此处的访问点名称在后续配置中使用)，描述符随意填写，用于用户识别不同的访问点，如图3-10所示。

<p> <img src="/wincc%E9%80%9A%E8%AE%AF/20200415022548596.png" alt=""></p>
<center>图3-8 设置PG/PC接口</center>

<p> <img src="/wincc%E9%80%9A%E8%AE%AF/20200415022548596.png" alt=""></p>
<center>图3-9 应用程序访问点</center>

<p> <img src="/wincc%E9%80%9A%E8%AE%AF/20200415022600557.png" alt=""></p>
<center>图 3-10 添加访问点</center>
填写完成后，点击"添加"按钮。接下来在"为使用的接口分配参数"选项中，选择带自己的以太网网卡名称并且尾部带有<激活>选项的选项卡，完成后点击确认完成接口配置，图3-11示。

<p><img src="/wincc%E9%80%9A%E8%AE%AF/20200415024320600.png" alt=""></p>
<center>图3-11 接口选择</center>
4.3WinCC中的连接配置
WinCC的主界面下，打开"变量管理"选项，展开新建好的 SIMATIC S7-1200，S7-1500 Channel 选项，右键OMS+，选择"新建连接"，输入连接的名称，然后右键新建的连接，选择"连接配置"，如图3-12示：

<p> <img src="/wincc%E9%80%9A%E8%AE%AF/20200415024404236.png" alt=""></p>
<center>图3-12 连接配置</center>
输入PLC模块的IP地址，PLC的IP地址可在PLC显示器上查看。访问点选择在PG/PC接口中新建的访问点，产品系列选择要连接的PLC型号系列，点击确认完成配置，激活项目即可自动配置变量。
注意
> 1通讯诊断和注意事项
项目激活后，在变量管理界面可以直接观察到通讯是否建立，绿勾表示通讯建立，

<p><img src="/wincc%E9%80%9A%E8%AE%AF/20200415024754195.png" alt=""></p>
<p>图2-10通讯诊断工具<br>注意，读取DB块数，DB块不能续用号，只能使用对寻址，所建的DB块属性中需要取消“优化的块访问”，如图所示。</p>
<p><img src="/wincc%E9%80%9A%E8%AE%AF/20200415024855370.png" alt=""></p>
<p>参考文献：<a href="https://m.baidu.com/ala/c/www.360doc.cn/mip/806163569.html" target="_blank" rel="noopener external nofollow noreferrer">wincc与s7-1200/1500链接</a></p>
]]></content>
      <categories>
        <category>毕业设计</category>
      </categories>
      <tags>
        <tag>wincc</tag>
      </tags>
  </entry>
  <entry>
    <title>Wincc项目管理器</title>
    <url>/posts/7d11421d.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>wincc项目管理器是在创建wincc项目时的选项，分为单用户项目，多用户项目和客户机项目</p>
<h1 id="单用户项目"><a href="#单用户项目" class="headerlink" title="单用户项目"></a>单用户项目</h1><p>单用户项目是计算机及作为服务器又作为客户机</p>
<h1 id="多用户项目"><a href="#多用户项目" class="headerlink" title="多用户项目"></a>多用户项目</h1><h2 id="多用户结构"><a href="#多用户结构" class="headerlink" title="多用户结构"></a>多用户结构</h2><p><strong>多用户系统组态步骤</strong></p>
<a id="more"></a>
<h3 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端:"></a>服务器端:</h3><p>1.检查服务器与客户机计算机的网络连接: ip地址在同一网段好处理<br>2.分配 Windows用户权限:三个组<br>3.创建多用户项目并组态:<br>4.在计算机列表中添加客户机并设置其属性:添加客户机的计算机名（只能是wincc客户机类型）<br>5.组态客户机的WinC登陆用户和权限：添加登录用户并授予不同的权限（远程激活和远程组态权限要注意）<br>6.生成服务器数据包:服务器数据&gt;创建（注意检查隐含更新中的自动导入选项）<br>7.项目保持打开激活。  </p>
<h3 id="客户机端"><a href="#客户机端" class="headerlink" title="客户机端:"></a>客户机端:</h3><p>1.分配windows用户权限:<br>2.网上邻居或Simatic Shell中浏览服务器项目:simatic就在我的电脑目录下，已经自动装载好了，可以进行登录激活）</p>
<h2 id="分布式结构"><a href="#分布式结构" class="headerlink" title="分布式结构"></a>分布式结构</h2><p><strong>分布式系统组态步骤:</strong></p>
<h3 id="服务器端（步骤同多用户系统）"><a href="#服务器端（步骤同多用户系统）" class="headerlink" title="服务器端（步骤同多用户系统）:"></a>服务器端（步骤同多用户系统）:</h3><p>1.组态服务器项目；<br>2.创建服务器数据包。<br><em>不需要添加客户机名，因为客户机不需要对服务器进行远程组态或者远程激活</em>  </p>
<h2 id="客户机端-1"><a href="#客户机端-1" class="headerlink" title="客户机端:"></a>客户机端:</h2><p>1.创建客户机项目：进行界面或则脚本的组态<br>2.导入服务器数据包：&gt;服务器数据&gt;装载（.pck）,导入多个服务器上的数据（画面及变量，消息数据，用户归档数据，变量归档）<br>3.组态客户机项目。</p>
<blockquote>
<p>并非所有的数据都包含在服务器数据包中，如菜单与工具栏，全局脚本，报表，用户管理，交叉索引等，如果客户需要执行以上内容，需要另行组态。</p>
</blockquote>
<table class="table table-bordered table-striped table-condensed">
    <tr>
    <td></td>
        <td>多用户</td>
    <td>分布式</td>
    </tr>
    <tr>
        <td>应用领域</td>
    <td>应用于小型系统或较小型系
统。在不同的操作控制台上显示与同一过程相关的不同信息。从多个位置来操作过程，例如，沿生产线的不同位置。通过用户授权来定义某些操作控制台上的操作员可利用的功能。</td>
<td>应用于较大型或大型系统，系统扩充容易。同一任务要由多个操作员站和监视站（客户机）完成的大型系统上。要将不同操作员和监视任务分布到多个操作员站时，如用于显示一个系统的全部消息的中央客户机。</td>
    </tr>
    <td>性能</td>
        <td>在一台服务器上可运行多达32台客户机，每台客户机只能连接1台服务器</td>
    <td>服务器最多可以连接32台客台户机，每台客户机最多可以连接12台服务器或12对冗余的服务器。
    </td>
    </tr>
    <tr>
    <td>特点</td>
        <td>客户端没有项目，系统组态简单，易于对服务器项目远程维护</td>
    <td>客户端没有项目，负载平衡，使用灵活，扩展能力强</td>
    </tr>
</table>

<h2 id="冗余服务器"><a href="#冗余服务器" class="headerlink" title="冗余服务器"></a>冗余服务器</h2><h2 id="TIA下的系统组态"><a href="#TIA下的系统组态" class="headerlink" title="TIA下的系统组态"></a>TIA下的系统组态</h2><h2 id="Wincc软冗余"><a href="#Wincc软冗余" class="headerlink" title="Wincc软冗余"></a>Wincc软冗余</h2>]]></content>
      <categories>
        <category>毕业设计</category>
      </categories>
      <tags>
        <tag>wincc</tag>
      </tags>
  </entry>
  <entry>
    <title>wincc自定义登录与退出界面</title>
    <url>/posts/47a0fae9.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><blockquote>
<p><img src="https://i.loli.net/2020/04/10/ENb5oUCRgcZh78n.png" alt="20200410063040399.png"><br>WinCC用户管理器的主要功能可以给不同的用户设置不同的密码和访问权限，以便对用户的登录和访问进行监控，从而达到拒绝没有授权的访问，保证系统安全。</p>
</blockquote>
<a id="more"></a>
<h3 id="在用户管理器中添加用户名和密码并进行授权"><a href="#在用户管理器中添加用户名和密码并进行授权" class="headerlink" title="在用户管理器中添加用户名和密码并进行授权."></a>在用户管理器中添加用户名和密码并进行授权.</h3><p><img src="https://i.loli.net/2020/04/10/oKFvk2t3U4f7PTZ.png" alt="20200410061723116.png"></p>
<h3 id="在图形编译器中新建启动登录界面（启动登陆-Pdl）和其他自己所需要的图形界面"><a href="#在图形编译器中新建启动登录界面（启动登陆-Pdl）和其他自己所需要的图形界面" class="headerlink" title="在图形编译器中新建启动登录界面（启动登陆.Pdl）和其他自己所需要的图形界面."></a>在图形编译器中新建启动登录界面（启动登陆.Pdl）和其他自己所需要的图形界面.</h3><p><img src="https://i.loli.net/2020/04/10/I1EY5xXANWv2Di6.png" alt="20200410062313380.png"></p>
<h3 id="进入启动登陆界面，插入2个输入-输出域，更改名为1-2。分别是用于“用户名”输入；“密码”输入；插入2个按钮登录；退出。"><a href="#进入启动登陆界面，插入2个输入-输出域，更改名为1-2。分别是用于“用户名”输入；“密码”输入；插入2个按钮登录；退出。" class="headerlink" title="进入启动登陆界面，插入2个输入/输出域，更改名为1,2。分别是用于“用户名”输入；“密码”输入；插入2个按钮登录；退出。"></a>进入启动登陆界面，插入2个输入/输出域，更改名为1,2。分别是用于“用户名”输入；“密码”输入；插入2个按钮登录；退出。</h3><p><img src="https://i.loli.net/2020/04/10/W4Pzm9IiCLYerNO.png" alt="20200410063350891.png"></p>
<h3 id="用户名的输入输出域的输出值为内部变量：-CurrentUserName"><a href="#用户名的输入输出域的输出值为内部变量：-CurrentUserName" class="headerlink" title="用户名的输入输出域的输出值为内部变量：@CurrentUserName"></a>用户名的输入输出域的输出值为内部变量：@CurrentUserName</h3><p>找到相应界面窗口<br><img src="https://i.loli.net/2020/04/10/Ys6GLvwUQh8KemM.png" alt="20200410065206664.png"><br>添加变量<br><img src="https://i.loli.net/2020/04/10/PH6GgDOrQbV1Xd9.png" alt="20200410065332595.png"></p>
<h3 id="在用户名的输入输出域的事件属性-gt-其他-gt-对象更改-加入C脚本函数"><a href="#在用户名的输入输出域的事件属性-gt-其他-gt-对象更改-加入C脚本函数" class="headerlink" title="在用户名的输入输出域的事件属性-&gt;其他-&gt;对象更改  加入C脚本函数"></a>在用户名的输入输出域的事件属性-&gt;其他-&gt;对象更改  加入C脚本函数</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"apdefap.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OnObjectChanged</span><span class="params">(<span class="keyword">char</span>* lpszPictureName, <span class="keyword">char</span>* lpszObjectName, <span class="keyword">char</span>* lpszPropertyName, <span class="keyword">char</span>* value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SetOutputValueChar(lpszPictureName,lpszObjectName,GetInputValueChar(lpszPictureName,lpszObjectName));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p><img src="https://i.loli.net/2020/04/10/c3BVDOCJGQy2ITS.png" alt="20200410064227543.png"></p>
<h3 id="按照上面做的-在密码输入输出域里加入同样的C脚本"><a href="#按照上面做的-在密码输入输出域里加入同样的C脚本" class="headerlink" title="按照上面做的 在密码输入输出域里加入同样的C脚本"></a>按照上面做的 在密码输入输出域里加入同样的C脚本</h3><h3 id="在登录按钮的事件-gt-按钮-gt-鼠标按下-加入C脚本"><a href="#在登录按钮的事件-gt-按钮-gt-鼠标按下-加入C脚本" class="headerlink" title="在登录按钮的事件-&gt;按钮-&gt;鼠标按下 加入C脚本"></a>在登录按钮的事件-&gt;按钮-&gt;鼠标按下 加入C脚本</h3><p>注意按照自己的需要更改openpicture()的画面</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"apdefap.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OnLButtonDown</span><span class="params">(<span class="keyword">char</span>* lpszPictureName, <span class="keyword">char</span>* lpszObjectName, <span class="keyword">char</span>* lpszPropertyName)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> code (<span class="meta-string">"UseAdmin.DLL"</span>)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"pwrt_api.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> code ()</span></span><br><span class="line"><span class="keyword">if</span> (PWRTSilentLogin(GetInputValueChar(lpszPictureName,<span class="string">"1"</span>),GetInputValueChar(lpszPictureName,<span class="string">"2"</span>)) == FALSE)</span><br><span class="line">MessageBox (<span class="literal">NULL</span>, <span class="string">"错误,请重新输入!"</span> , <span class="string">"提示"</span>, MB_ICONEXCLAMATION| MB_SYSTEMMODAL );<span class="comment">// &#125;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">OpenPicture(<span class="string">"你要进入的画面"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p><img src="https://i.loli.net/2020/04/10/pbWEisJFAyX8kDZ.png" alt="20200410065631708.png"></p>
<h3 id="退出按钮中加入退出wincc脚本可以了"><a href="#退出按钮中加入退出wincc脚本可以了" class="headerlink" title="退出按钮中加入退出wincc脚本可以了"></a>退出按钮中加入退出wincc脚本可以了</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="C"><figure class="iseeu highlight /c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"apdefap.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">OnLButtonDown</span><span class="params">(<span class="keyword">char</span>* lpszPictureName, <span class="keyword">char</span>* lpszObjectName, <span class="keyword">char</span>* lpszPropertyName, UINT nFlags, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> Ret = IDNO; </span><br><span class="line"> Ret  = MessageBox(<span class="literal">NULL</span>, <span class="string">"您确实要退出 WinCC 运行系统么？"</span>,    <span class="string">"请确认"</span>, MB_YESNO | MB_ICONQUESTION | MB_DEFBUTTON2 |  MB_SYSTEMMODAL); </span><br><span class="line">  <span class="keyword">if</span> (Ret == IDYES)  </span><br><span class="line">ExitWinCC ();    <span class="comment">//退出wincc</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>
<p><img src="https://i.loli.net/2020/04/10/BA4h3W8tGMsD9jJ.png" alt="20200410070217481.png"></p>
<h3 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h3>]]></content>
      <categories>
        <category>毕业设计</category>
      </categories>
      <tags>
        <tag>wincc</tag>
      </tags>
  </entry>
  <entry>
    <title>wincc用户权限</title>
    <url>/posts/a68fff4f.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="默认授权概述"><a href="#默认授权概述" class="headerlink" title="默认授权概述"></a>默认授权概述</h2><h3 id="1：用户管理"><a href="#1：用户管理" class="headerlink" title="1：用户管理"></a>1：用户管理</h3><p>用户可以访问用户管理并进行更改。</p>
<h3 id="2：-数值输入"><a href="#2：-数值输入" class="headerlink" title="2： 数值输入"></a>2： 数值输入</h3><p>用户可以手动输入值，例如在 I/O 字段中。</p>
<a id="more"></a>
<h3 id="3：-过程控制"><a href="#3：-过程控制" class="headerlink" title="3： 过程控制"></a>3： 过程控制</h3><p>用户可以操作过程。</p>
<h3 id="4：-画面编辑"><a href="#4：-画面编辑" class="headerlink" title="4： 画面编辑"></a>4： 画面编辑</h3><p>用户可以更改画面和画面元素。</p>
<h3 id="5：-画面切换"><a href="#5：-画面切换" class="headerlink" title="5： 画面切换"></a>5： 画面切换</h3><p>用户可以触发画面更改，并打开其它组态的画面。</p>
<h3 id="6：-窗口选择"><a href="#6：-窗口选择" class="headerlink" title="6： 窗口选择"></a>6： 窗口选择</h3><p>用户可以在 Windows 中切换应用程序窗口。</p>
<h3 id="7：-硬拷贝"><a href="#7：-硬拷贝" class="headerlink" title="7： 硬拷贝"></a>7： 硬拷贝</h3><p>用户可以建立当前过程画面的硬拷贝。</p>
<h3 id="8：-确认消息"><a href="#8：-确认消息" class="headerlink" title="8： 确认消息"></a>8： 确认消息</h3><p>用户可以确认消息。</p>
<h3 id="9：-锁定消息"><a href="#9：-锁定消息" class="headerlink" title="9： 锁定消息"></a>9： 锁定消息</h3><p>用户可以锁定消息。</p>
<h3 id="10：-解锁消息"><a href="#10：-解锁消息" class="headerlink" title="10： 解锁消息"></a>10： 解锁消息</h3><p>用户可以解锁消息。</p>
<h3 id="11：-消息编辑"><a href="#11：-消息编辑" class="headerlink" title="11： 消息编辑"></a>11： 消息编辑</h3><p>用户可以在“报警记录”编辑器（例如使用 ODK）中编辑消息。</p>
<h3 id="12：-启动归档"><a href="#12：-启动归档" class="headerlink" title="12： 启动归档"></a>12： 启动归档</h3><p>用户可以启动归档过程。</p>
<h3 id="13：-停止归档"><a href="#13：-停止归档" class="headerlink" title="13： 停止归档"></a>13： 停止归档</h3><p>用户可以结束归档。</p>
<h3 id="14：-归档值编辑"><a href="#14：-归档值编辑" class="headerlink" title="14： 归档值编辑"></a>14： 归档值编辑</h3><p>用户可以组态归档变量的计算。</p>
<h3 id="15：-归档编辑"><a href="#15：-归档编辑" class="headerlink" title="15： 归档编辑"></a>15： 归档编辑</h3><p>用户可以控制并更改归档。</p>
<h3 id="16：-动作编辑"><a href="#16：-动作编辑" class="headerlink" title="16： 动作编辑"></a>16： 动作编辑</h3><p>用户可以运行和编辑脚本（例如使用 ODK）。</p>
<h3 id="17：-项目管理器"><a href="#17：-项目管理器" class="headerlink" title="17： 项目管理器"></a>17： 项目管理器</h3><p>用户可以不受限制访问 WinCC 项目管理器。</p>
<h3 id="18：-远程激活"><a href="#18：-远程激活" class="headerlink" title="18： 远程激活"></a>18： 远程激活</h3><p>用户可通过另一台计算机启动和终止运行系统。</p>
<h3 id="19：-远程组态"><a href="#19：-远程组态" class="headerlink" title="19： 远程组态"></a>19： 远程组态</h3><p>用户可通过另一台计算机组态和编辑项目。</p>
<h3 id="20：-Web-访问-仅监视"><a href="#20：-Web-访问-仅监视" class="headerlink" title="20： Web 访问 - 仅监视"></a>20： Web 访问 - 仅监视</h3><p>用户可通过另一台计算机打开项目，但是无法更改或控制该项目。</p>
]]></content>
      <categories>
        <category>毕业设计</category>
      </categories>
      <tags>
        <tag>wincc</tag>
      </tags>
  </entry>
  <entry>
    <title>黑苹果</title>
    <url>/posts/55f059f2.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="今天逛了一下苹果官网，看了一下前一段时间出的MAC-Pro"><a href="#今天逛了一下苹果官网，看了一下前一段时间出的MAC-Pro" class="headerlink" title="今天逛了一下苹果官网，看了一下前一段时间出的MAC Pro"></a>今天逛了一下苹果官网，看了一下前一段时间出的MAC Pro</h1><h2 id="顶配RMB-411-768（四十万买个电脑hhh）"><a href="#顶配RMB-411-768（四十万买个电脑hhh）" class="headerlink" title="顶配RMB:411,768（四十万买个电脑hhh）"></a>顶配RMB:411,768（四十万买个电脑hhh）</h2><p><img src="https://i.loli.net/2020/03/31/Aw1aWrh4d3lEstf.png" alt="Snipaste_2020-03-31_20-41-19.png"></p>
<a id="more"></a>
<h2 id="低配RMB-54-999-除了存储1T，其他都是最低配"><a href="#低配RMB-54-999-除了存储1T，其他都是最低配" class="headerlink" title="低配RMB:54,999(除了存储1T，其他都是最低配)"></a>低配RMB:54,999(除了存储1T，其他都是最低配)</h2><p><img src="https://i.loli.net/2020/03/31/I8QLXoUBetnxTwk.png" alt="Snipaste_2020-03-31_21-25-39.png"></p>
<h3 id="试试自己装一台相同性能配置的黑苹果要多少"><a href="#试试自己装一台相同性能配置的黑苹果要多少" class="headerlink" title="试试自己装一台相同性能配置的黑苹果要多少"></a>试试自己装一台相同性能配置的黑苹果要多少</h3><h4 id="以下配件都是参考别人的成功案例查找的可行配置"><a href="#以下配件都是参考别人的成功案例查找的可行配置" class="headerlink" title="以下配件都是参考别人的成功案例查找的可行配置"></a>以下配件都是参考别人的成功案例查找的可行配置</h4><p><img src="https://i.loli.net/2020/03/31/GAWrlB6HL5ZoX92.png" alt="Snipaste_2020-03-31_21-21-50.png"></p>
<blockquote>
<p>一套顶六套，个人感觉这套配置可以完成99%白苹果功能并且跑分会超过白苹果（不（<code>mei</code>）想（<code>qian</code>）实验）</p>
</blockquote>
<h2 id="八千多在官网上买个显示器都买不到，最多可以买个显示器支架hhh"><a href="#八千多在官网上买个显示器都买不到，最多可以买个显示器支架hhh" class="headerlink" title="八千多在官网上买个显示器都买不到，最多可以买个显示器支架hhh"></a>八千多在官网上买个显示器都买不到，最多可以买个显示器支架hhh</h2><p><img src="https://i.loli.net/2020/03/31/QJ7PHp2ej3A8MDx.png" alt="Snipaste_2020-03-31_21-14-29.png"><br><img src="https://i.loli.net/2020/03/31/lndDNoMkAEUvJbO.png" alt="Snipaste_2020-03-31_21-13-40.png"></p>
<blockquote>
<p>个人观点，仅供参考，装机小白，欢迎评论。</p>
</blockquote>
<blockquote>
<p>参考文章链接<br> <a href="https://github.com/GeQ1an/MSI-B360M-MORTAR-HACKINTOSH-OPENCORE-EFI" target="_blank" rel="noopener external nofollow noreferrer">github大神</a><br> <a href="https://www.apple.com.cn/" target="_blank" rel="noopener external nofollow noreferrer">苹果官网</a></p>
</blockquote>
]]></content>
      <categories>
        <category>电脑装机</category>
      </categories>
      <tags>
        <tag>黑苹果</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown--表格table处理</title>
    <url>/posts/6b64eeb8.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="利用HTML来实现表格功能"><a href="#利用HTML来实现表格功能" class="headerlink" title="利用HTML来实现表格功能"></a>利用HTML来实现表格功能</h2><p>插入表格代码如下：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MARKDOWN"><figure class="iseeu highlight /markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-bordered table-striped table-condensed"</span>&gt;</span></span></span><br><span class="line"><span class="code">    &lt;tr&gt;</span></span><br><span class="line"><span class="code">        &lt;td&gt;苹果&lt;/td&gt;</span></span><br><span class="line"><span class="code">	&lt;td&gt;apple&lt;/td&gt;</span></span><br><span class="line"><span class="code">    &lt;/tr&gt;</span></span><br><span class="line"><span class="code">    &lt;tr&gt;</span></span><br><span class="line"><span class="code">        &lt;td&gt;香蕉&lt;/td&gt;</span></span><br><span class="line"><span class="code">	&lt;td&gt;banana&lt;/td&gt;</span></span><br><span class="line"><span class="code">    &lt;/tr&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br></pre></td></tr></table></figure></div>

<a id="more"></a>
<p>以上代码实际上是属于HTML CSS代码，不过好在markdown支持<strong>部分</strong>HTML语法<br>如果只是table标签 表格功能在markdown中将不起作用。<br>如果table中加了个class属性，就可以正常使用表格功能了（可能是自动将md文件转HTML时候突然认出了“哇！这个加了class属性的table，感觉很是熟悉”hhh）</p>
<h3 id="其中"><a href="#其中" class="headerlink" title="其中"></a><strong>其中</strong></h3><blockquote>
<p>table-bordered：带圆角边框和竖线<br>table-striped：奇偶行颜色不同<br>table-condensed：压缩行距</p>
</blockquote>
<h3 id="除了以上另外还有其他可供选择："><a href="#除了以上另外还有其他可供选择：" class="headerlink" title="除了以上另外还有其他可供选择："></a>除了以上另外还有其他可供选择：</h3><p>1、如果需要表头跟内容不一样，可以将<code>&lt;td&gt;表头内容&lt;/td&gt; 更换成 &lt;th&gt;表头内容&lt;/th&gt;</code>。<br>2、如果表格内文需要换行，可以在要换行的内容后加入<code>&lt;br&gt;</code>，后面的内容就会跑到下一行。<br>3、如果内文中有代码，需要特别显示，可使用：<code>&lt;code&gt;代码&lt;/code&gt;</code>。<br>4、如果表格中有需要设为斜体的内容，可使用：<I>要设为斜体的内容</I>。<br>5、如果有跨行或者跨列的单元格，可用<code>&lt;th colspan=&quot;跨列数&quot;&gt;内容&lt;/th&gt;</code>。<br>6、如果要调整某一列的宽度，可使用：<code>&lt;th width=&quot;宽度值或百分比&quot;&gt;表头内容&lt;/th&gt;</code>。  </p>
<p>最后效果如下：</p>
<table class="table table-bordered table-striped table-condensed">
    <tr>
        <td>苹果</td>
    <td>apple</td>
    </tr>
    <tr>
        <td>香蕉</td>
    <td>banana</td>
    </tr>
</table>

<p>有关使用表格功能可能会出现的问题可以参考这一篇文章<br><a href="https://codebai.top/posts/a1cfa130.html" target="_blank" rel="noopener external nofollow noreferrer">siderbar侧栏进入post-body栏解决方案</a></p>
]]></content>
  </entry>
  <entry>
    <title>MarkDown添加图片的几种方式</title>
    <url>/posts/bd8ce08f.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>在MarkDown文档中插图最基础的格式就是：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MARKDOWN"><figure class="iseeu highlight /markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">Alt text</span>](<span class="link">图片链接 "optional title"</span>)</span><br></pre></td></tr></table></figure></div>
<p>或则</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MARKDOWN"><figure class="iseeu highlight /markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"图片链接"</span> <span class="attr">width</span>=<span class="string">""</span>  <span class="attr">height</span>=<span class="string">""</span> &gt;</span></span></span><br></pre></td></tr></table></figure></div>
<a id="more"></a>
<blockquote>
<p>Alt text：图片的Alt标签，用来描述图片的关键词，可以不写。最初的本意是当图片因为某种原因不能被显示时而出现的替代文字，后来又被用于SEO，可以方便搜索引擎根据Alt text里面的关键词搜索到图片。 </p>
</blockquote>
<blockquote>
<p>图片链接：可以是图片的本地地址或者是网址。</p>
</blockquote>
<blockquote>
<p>“optional title”：鼠标悬置于图片上会出现的标题文字，可以不写。</p>
</blockquote>
<h2 id="插入网络图片：最常用的最方便的方法"><a href="#插入网络图片：最常用的最方便的方法" class="headerlink" title="插入网络图片：最常用的最方便的方法"></a>插入网络图片：最常用的最方便的方法</h2><p>只需要在基础语法的括号中填入图片的网络链接即可，现在已经有很多免费/收费图床和方便传图的小工具可选。<br>例如：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MARKDOWN"><figure class="iseeu highlight /markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">good doctor</span>](<span class="link">https://s1.ax1x.com/2020/03/23/8ojlQO.jpg  "良医"</span>)</span><br></pre></td></tr></table></figure></div>

<p><img src="https://s1.ax1x.com/2020/03/23/8ojlQO.jpg" alt="good doctor" title="良医"></p>
<blockquote>
<p>1、good doctor是当图片无法显示的时候出现在界面上，良医是鼠标放在图片上显示的内容，具体可以在效果图上自己演示<br>  2、将图片存在网络服务器上，有点依赖网络，其实个人感觉印象不是太大（可能本人用的比较少）<br>  3、后面会分享一下自己使用过的图床。  </p>
</blockquote>
<h2 id="插入本地图片"><a href="#插入本地图片" class="headerlink" title="插入本地图片"></a>插入本地图片</h2><p>只需要在基础语法的括号中填入图片的位置路径即可，支持绝对路径和相对路径。<br>例如：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="MARKDOWN"><figure class="iseeu highlight /markdown"><table><tr><td class="code"><pre><span class="line">![<span class="string">avatar</span>](<span class="link">/home/picture/1.png</span>)</span><br></pre></td></tr></table></figure></div>
<blockquote>
<p>不灵活不好分享，本地图片的路径更改或丢失都会造成markdown文件调不出图。</p>
</blockquote>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo博客解决文章置顶问题</title>
    <url>/posts/95ddd57d.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="示例图："><a href="#示例图：" class="headerlink" title="示例图："></a>示例图：</h3><p><img src="https://s1.ax1x.com/2020/03/27/GPLisU.png" alt="置顶图片"></p>
<a id="more"></a>
<h2 id="博文置顶"><a href="#博文置顶" class="headerlink" title="博文置顶"></a>博文置顶</h2><p> 一种方法是手动对相关文件进行修改，具体可参考<a href="https://www.jianshu.com/p/42a4efcdf8d7" target="_blank" rel="noopener external nofollow noreferrer" class="LinkCard">手动设置博文置顶</a></p>
<p> 另一种方法就是，目前已经有修改后支持置顶的仓库，可以直接用以下命令安装。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">$ npm uninstall hexo-generator-index --save</span><br><span class="line">$ npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure></div>
<p>然后在需要置顶的文章的Front-matter中加上top: true即可。比如下面这篇文章：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">---markdown</span><br><span class="line">title: Markdown进阶（更改字体、颜色、大小，设置文字背景色，调整图片大小设置居中）</span><br><span class="line">date: 2020-03-23 08:19:22</span><br><span class="line">tags: hexo </span><br><span class="line">top: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure></div>
<p>到目前为止，置顶功能已经可以实现了。所有相关博文到这边就结束了。<br>样式如下：<br><img src="https://s1.ax1x.com/2020/03/27/GPLisU.png" alt="文章置顶"></p>
<p>不过置顶的文章显示在最上面之后，如果没有明确的置顶标志，是不是感觉有点怪怪的呢？</p>
<h2 id="设置置顶标志"><a href="#设置置顶标志" class="headerlink" title="设置置顶标志"></a>设置置顶标志</h2><p>打开：/blog/themes/next/layout/_macro 目录下的post.swig文件，定位到<code>&lt;div class=&quot;post-meta&quot;&gt;</code>标签下，插入如下代码：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="JS"><figure class="iseeu highlight /js"><table><tr><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> post.top %&#125;</span><br><span class="line">  &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"fa fa-thumb-tack"</span>&gt;&lt;<span class="regexp">/i&gt;</span></span><br><span class="line"><span class="regexp">  &lt;font color=7D26CD&gt;置顶&lt;/</span>font&gt;</span><br><span class="line">  &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"post-meta-divider"</span>&gt;|&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">&#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure></div>
<p>效果展示：</p>
<p><img src="https://s1.ax1x.com/2020/03/27/GPLisU.png" alt="alt 置顶图片" title="置顶"></p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul>
<li><p><a href="https://www.jianshu.com/p/42a4efcdf8d7" target="_blank" rel="noopener external nofollow noreferrer">解决Hexo博客文章置顶问题</a></p>
</li>
<li><p><a href="http://www.netcan666.com/2015/11/22/%E8%A7%A3%E5%86%B3Hexo%E7%BD%AE%E9%A1%B6%E9%97%AE%E9%A2%98/" target="_blank" rel="noopener external nofollow noreferrer">解决Hexo置顶问题</a></p>
</li>
<li><p><a href="http://jinfang.life/posts/e0bb97e1/" target="_blank" rel="noopener external nofollow noreferrer">Hexo主题的数据封装，样式渲染和扩展实例</a></p>
</li>
</ul>
]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>为博客添加站内搜索功能</title>
    <url>/posts/60daf15.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><blockquote>
<p>当我的博客文章和练习题发表得比较多的时候，要查询哪些习题是我曾经整理过的，就变得比较复杂和麻烦了，我们不可能一个一个文件的挨着去找。为了方便读者查询相应的题目以及为了我能快速定位我整理过哪些习题，故添加了站内搜索功能。</p>
</blockquote>
<a id="more"></a>

<h2 id="a-前言"><a href="#a-前言" class="headerlink" title="a.前言"></a>a.前言</h2><p>我的博客采用的是hexo进行搭建，选择的是next主题。而next主题其实也集成了几种搜索插件，我采用的是local-search插件。此插件会生成一个search.xml文件，其中包含了你网站上所有相关的数据，搜索的时候就从这个文件中根据关键字检索出相应的链接。</p>
<h2 id="b-安装"><a href="#b-安装" class="headerlink" title="b.安装"></a>b.安装</h2><p>在项目的根目录下，通过<code>cmd</code>或者<code>Git Bash</code>执行下面这条命令以安装<code>hexo-generator-searchdb</code>插件。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SHELL"><figure class="iseeu highlight /shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></div>
<h2 id="c-配置"><a href="#c-配置" class="headerlink" title="c.配置"></a>c.配置</h2><h3 id="1-修改站点配置文件"><a href="#1-修改站点配置文件" class="headerlink" title="1.修改站点配置文件"></a>1.修改站点配置文件</h3><p>打开站点配置文件，即根目录下的_config.yml文件，添加以下代码</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YML"><figure class="iseeu highlight /yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span> <span class="comment">##索引文件的路径，相对于站点根目录</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span>       <span class="comment">##搜索范围，默认是 post，还可以选择 page、all，设置成 all 表示搜索所有页面</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span>         <span class="comment">##限制搜索的条目数</span></span><br></pre></td></tr></table></figure></div>
<p>注意冒号和空格的处理。这些参数都是可以修改的，不过默认设置为这样就行了，一般也不需要修改。如果要修改，请查看<a href="https://github.com/theme-next/hexo-generator-searchdb" target="_blank" rel="noopener external nofollow noreferrer">hexo-generator-searchdb</a>配置参数。</p>
<h3 id="2-修改主题配置文件"><a href="#2-修改主题配置文件" class="headerlink" title="2.修改主题配置文件"></a>2.修改主题配置文件</h3><p>打开主题配置文件，即<code>themes/next</code>下的<code>_config.yml</code>文件，将<code>local_search</code>下的<code>enable</code>修改为<code>true</code>，即启用<code>local_search</code>插件。</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="YML"><figure class="iseeu highlight /yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">True</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></div>
<h2 id="d-部署"><a href="#d-部署" class="headerlink" title="d.部署"></a>d.部署</h2><p>  执行上述步骤后，再运行以下命令，部署上去，就可以看到在页面上有一个搜索图标，点击并输入相关文字，就可以看到搜索结果，点击即可跳转到对应页面，十分方便。<br>  <div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SHELL"><figure class="iseeu highlight /shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">hexo clean</span></span><br><span class="line"><span class="meta">#</span><span class="bash">hexo g</span></span><br><span class="line"><span class="meta">#</span><span class="bash">hexo d</span></span><br></pre></td></tr></table></figure></div></p>
<h2 id="e-最终效果见本人博客主页"><a href="#e-最终效果见本人博客主页" class="headerlink" title="e.最终效果见本人博客主页"></a>e.最终效果见本人博客主页</h2>]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>Win10环境下基于Hexo的静态博客环境搭建，及其阿里云部署</title>
    <url>/posts/3c1d3d37.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><a id="more"></a>
]]></content>
      <tags>
        <tag>hexo</tag>
        <tag>aliyun.win10</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>tar命令中的-C作用</title>
    <url>/posts/f9a72a7f.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>一直不知道解压命令如何指定文件夹，今天学到了一个 -C 参数  </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">#tar -xvf nginx-1.16.0.tar.gz -C &#x2F;usr&#x2F;local</span><br></pre></td></tr></table></figure></div>
<p><strong>注释：</strong>上面的命令将 nginx-1.16.0.tar.gz 这个压缩包解压到/usr/local目录下。</p>
<h4 id="C-选项的作用是：指定需要解压到的目录。"><a href="#C-选项的作用是：指定需要解压到的目录。" class="headerlink" title="-C 选项的作用是：指定需要解压到的目录。"></a>-C 选项的作用是：指定需要解压到的目录。</h4>]]></content>
      <tags>
        <tag>linux</tag>
        <tag>shell命令</tag>
      </tags>
  </entry>
  <entry>
    <title>需要记住的断点续传命令wget -c 网址</title>
    <url>/posts/c9f35c85.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>&emsp; 当文件特别大或者网络特别慢的时候，往往一个文件还没有下载完，连接就已经被切断，此时就需要断点续传。<br>特别是使用谷歌浏览器下载东西的时候！<br>wget的断点续传是自动的，只需要使用-c参数，例如：</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">#wget -c https:&#x2F;&#x2F;nginx.org&#x2F;download&#x2F;nginx-1.10.1.tar.gz</span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>linux 下如何安装nginx</title>
    <url>/posts/e465cc7b.html</url>
    <content><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="1-下载nginx安装包"><a href="#1-下载nginx安装包" class="headerlink" title="1)下载nginx安装包"></a>1)下载nginx安装包</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SHELL"><figure class="iseeu highlight /shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">wget -c https://nginx.org/download/nginx-1.16.0.tar.gz</span></span><br></pre></td></tr></table></figure></div>
<h3 id="2）解压到-usr-local目录"><a href="#2）解压到-usr-local目录" class="headerlink" title="2）解压到/usr/local目录"></a>2）解压到/usr/local目录</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="SHELL"><figure class="iseeu highlight /shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">tar -xvf nginx-1.16.0.tar.gz -C /usr/<span class="built_in">local</span></span></span><br></pre></td></tr></table></figure></div>
<a id="more"></a>

<p><em>此时压缩包已经解压完成，可以在当前目录将压缩包删除</em> </p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">rm nginx-1.16.0.tar.gz</span><br></pre></td></tr></table></figure></div>
<h3 id="3-进入-usr-local目录，确认nginx解压到该目录下"><a href="#3-进入-usr-local目录，确认nginx解压到该目录下" class="headerlink" title="3)进入/usr/local目录，确认nginx解压到该目录下"></a>3)进入/usr/local目录，确认nginx解压到该目录下</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">#cd &#x2F;usr&#x2F;local</span><br><span class="line">#ls</span><br></pre></td></tr></table></figure></div>
<h3 id="4-进入nginx-1-16-0目录，会发现该目录下有一个configure文件，执行该配置文件。"><a href="#4-进入nginx-1-16-0目录，会发现该目录下有一个configure文件，执行该配置文件。" class="headerlink" title="4)进入nginx-1.16.0目录，会发现该目录下有一个configure文件，执行该配置文件。"></a>4)进入nginx-1.16.0目录，会发现该目录下有一个configure文件，执行该配置文件。</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">#cd nginx-1.16.0&#x2F;</span><br><span class="line">#ls</span><br><span class="line">#.&#x2F;configure</span><br></pre></td></tr></table></figure></div>
<h3 id="5-编译并安装nginx。（问题的解决方案在最后）"><a href="#5-编译并安装nginx。（问题的解决方案在最后）" class="headerlink" title="5)编译并安装nginx。（问题的解决方案在最后）"></a>5)编译并安装nginx。（问题的解决方案在最后）</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">#make</span><br><span class="line">#make install</span><br></pre></td></tr></table></figure></div>
<h3 id="6-查找nginx安装目录。"><a href="#6-查找nginx安装目录。" class="headerlink" title="6)查找nginx安装目录。"></a>6)查找nginx安装目录。</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">#whereis nginx</span><br></pre></td></tr></table></figure></div>
<h3 id="7-进入安装目录。"><a href="#7-进入安装目录。" class="headerlink" title="7)进入安装目录。"></a>7)进入安装目录。</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">#cd &#x2F;usr&#x2F;local&#x2F;nginx</span><br><span class="line">#ls</span><br></pre></td></tr></table></figure></div>
<h3 id="8-由于nginx默认通过80端口访问，而Linux默认情况下不会开发该端口号，因此需要开放linux的80端口供外部访问。"><a href="#8-由于nginx默认通过80端口访问，而Linux默认情况下不会开发该端口号，因此需要开放linux的80端口供外部访问。" class="headerlink" title="8)由于nginx默认通过80端口访问，而Linux默认情况下不会开发该端口号，因此需要开放linux的80端口供外部访问。"></a>8)由于nginx默认通过80端口访问，而Linux默认情况下不会开发该端口号，因此需要开放linux的80端口供外部访问。</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">#&#x2F;sbin&#x2F;iptables -I INPUT -p tcp –-dport 80 -j ACCEPT</span><br></pre></td></tr></table></figure></div>
<h3 id="9-进入-usr-local-nginx-sbin目录，启动nginx。"><a href="#9-进入-usr-local-nginx-sbin目录，启动nginx。" class="headerlink" title="9)进入/usr/local/nginx/sbin目录，启动nginx。"></a>9)进入/usr/local/nginx/sbin目录，启动nginx。</h3><div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">#cd sbin</span><br><span class="line">#.&#x2F;nginx</span><br></pre></td></tr></table></figure></div>
<p>没有任何消息，代表启动成功。此时，便可以通过“公网IP+端口”的方式访问 <a href="http://xx.xx.xxx.xxx:80/" target="_blank" rel="noopener external nofollow noreferrer">http://xx.xx.xxx.xxx:80/</a> 进入nginx欢迎页面了。<br>注：可以使用./nginx -s stop命令停止服务,使用的时候要按照9）开启nginx</p>
<h2 id="可能遇到的问题"><a href="#可能遇到的问题" class="headerlink" title="可能遇到的问题"></a>可能遇到的问题</h2><h3 id="1）安装nginx时出现In-function‘ngx-murmur-hash2’-‘ngx-murmurhash-o-failed’等错误，如："><a href="#1）安装nginx时出现In-function‘ngx-murmur-hash2’-‘ngx-murmurhash-o-failed’等错误，如：" class="headerlink" title="1）安装nginx时出现In function‘ngx_murmur_hash2’ ‘ngx_murmurhash.o failed’等错误，如："></a>1）安装nginx时出现In function‘ngx_murmur_hash2’ ‘ngx_murmurhash.o failed’等错误，如：</h3><p><img src="/linux%E4%B8%8B%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85.tar.gz%E5%8C%85/20200321023230767.png" alt=""></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">URCE&#x3D;2 -I src&#x2F;core -I src&#x2F;event -I src&#x2F;event&#x2F;modules -I src&#x2F;os&#x2F;unix -I &#x2F;home&#x2F;always&#x2F;tools&#x2F;nginx-rtmp-module -I &#x2F;usr&#x2F;include&#x2F;libxml2 -I objs \</span><br><span class="line">        -o objs&#x2F;src&#x2F;core&#x2F;ngx_murmurhash.o \</span><br><span class="line">        src&#x2F;core&#x2F;ngx_murmurhash.c</span><br><span class="line">src&#x2F;core&#x2F;ngx_murmurhash.c: In function ‘ngx_murmur_hash2’:</span><br><span class="line">src&#x2F;core&#x2F;ngx_murmurhash.c:37:11: error: this statement may fall through [-Werror&#x3D;implicit-fallthrough&#x3D;]</span><br><span class="line">         h ^&#x3D; data[2] &lt;&lt; 16;</span><br><span class="line">         ~~^~~~~~~~~~~~~~~~</span><br><span class="line">src&#x2F;core&#x2F;ngx_murmurhash.c:38:5: note: here</span><br><span class="line">     case 2:</span><br><span class="line">     ^~~~</span><br><span class="line">src&#x2F;core&#x2F;ngx_murmurhash.c:39:11: error: this statement may fall through [-Werror&#x3D;implicit-fallthrough&#x3D;]</span><br><span class="line">         h ^&#x3D; data[1] &lt;&lt; 8;</span><br><span class="line">         ~~^~~~~~~~~~~~~~~</span><br><span class="line">src&#x2F;core&#x2F;ngx_murmurhash.c:40:5: note: here</span><br><span class="line">     case 1:</span><br><span class="line">     ^~~~</span><br><span class="line">cc1: all warnings being treated as errors</span><br><span class="line">objs&#x2F;Makefile:659: recipe for target &#39;objs&#x2F;src&#x2F;core&#x2F;ngx_murmurhash.o&#39; failed</span><br><span class="line">make[1]: *** [objs&#x2F;src&#x2F;core&#x2F;ngx_murmurhash.o] Error 1</span><br><span class="line">make[1]: Leaving directory &#39;&#x2F;home&#x2F;always&#x2F;tools&#x2F;nginx-1.10.3&#39;</span><br><span class="line">Makefile:8: recipe for target &#39;build&#39; failed</span><br><span class="line">make: *** [build] Error 2</span><br></pre></td></tr></table></figure></div>
<h4 id="原因-是将警告当成了错误处理"><a href="#原因-是将警告当成了错误处理" class="headerlink" title="原因:是将警告当成了错误处理"></a><code>原因:是将警告当成了错误处理</code></h4><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><p>打开./objs/Makefile，</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">#nano .&#x2F;objs&#x2F;Makefile</span><br></pre></td></tr></table></figure></div>
<p>CFLAGS =  -pipe  -O -W -Wall -Wpointer-arith -Wno-unused-parameter -Werror -g (去掉-Werror)<br><img src="/linux%E4%B8%8B%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85.tar.gz%E5%8C%85/20200321012500909.png" alt=""><br>ctrl + S保存   Ctrl + X退出nano回到终端<br>再重新make </p>
<blockquote>
<p>-Wall 表示打开gcc的所有警告<br>-Werror，它要求gcc将所有的警告当成错误进行处理  </p>
</blockquote>
<hr>
<h3 id="2）安装nginx报错“src-os-unix-ngx-user-c-26-7-error-‘struct-crypt-data’-has-no-member-named-‘current-salt’”"><a href="#2）安装nginx报错“src-os-unix-ngx-user-c-26-7-error-‘struct-crypt-data’-has-no-member-named-‘current-salt’”" class="headerlink" title="2）安装nginx报错“src/os/unix/ngx_user.c:26:7: error: ‘struct crypt_data’ has no member named ‘current_salt’”"></a>2）安装nginx报错“src/os/unix/ngx_user.c:26:7: error: ‘struct crypt_data’ has no member named ‘current_salt’”</h3><p><img src="/linux%E4%B8%8B%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85.tar.gz%E5%8C%85/20200321013011816.png" alt=""></p>
<h3 id="解决办法-1"><a href="#解决办法-1" class="headerlink" title="解决办法"></a>解决办法</h3><p>打开报错的位置文件，我的位置是/usr/local/nginx-1.16.0/src/os/unix<br><strong>版本号不一样，注意自己的版本和错误位置，正常安装就是我下面的位置</strong></p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">#nano &#x2F;usr&#x2F;local&#x2F;nginx-1.16.0&#x2F;src&#x2F;os&#x2F;unix&#x2F;ngx_user.c</span><br></pre></td></tr></table></figure></div>
<p>直接将current_salt相关的信息给注释掉<br><img src="/linux%E4%B8%8B%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85.tar.gz%E5%8C%85/20200321030017284.png" alt=""><br>ctrl + S保存   Ctrl + X退出nano回到终端<br>注意：要回到正确的位置，以防出错可以直接执行以下命令</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">#cd &#x2F;usr&#x2F;local&#x2F;nginx-1.16.0</span><br></pre></td></tr></table></figure></div>
<p>再重新make   make install</p>
<div class="highlight-wrap"autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" contenteditable="true"data-rel="PLAIN"><figure class="iseeu highlight /plain"><table><tr><td class="code"><pre><span class="line">#make</span><br><span class="line">#make install</span><br></pre></td></tr></table></figure></div>
]]></content>
      <tags>
        <tag>linux</tag>
        <tag>install</tag>
      </tags>
  </entry>
</search>
